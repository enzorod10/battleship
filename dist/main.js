(()=>{"use strict";var e={426:(e,t,a)=>{a.d(t,{Z:()=>l});var r=a(537),n=a.n(r),o=a(645),i=a.n(o)()(n());i.push([e.id,"*{\n    padding: 0px;\n    margin: 0px;\n}\n\nbody{\n    height: 100vh;\n    box-sizing: border-box;\n    display: grid;\n    grid-template-rows: 2fr 20fr 1fr;\n}\n\n.header{\n    border: 1px black solid;\n}\n\n.main{\n    border: 1px red solid;\n    display: flex;\n}\n\n.footer{\n    border: 1px yellow solid;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* main area section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* Player Area Section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n.playerArea{\n    border: 1px black solid;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 40px;\n}\n\n.playerBoard{\n    width: 450px;\n    height: 450px;\n    border: 1px black solid;\n    position: relative;\n    display: grid;\n    z-index: 2;\n    grid-template-columns: repeat(10, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n}\n\n.playerBoard > div{\n    border: 1px black solid;\n}\n\n.square.active{\n    background-color: rgb(153, 81, 81);\n}\n\n.messageContainer{\n    border: 1px red solid;\n    height: 50px;\n    width: 450px;\n}\n\n.fakeBoard{\n    height: 100%;\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n    pointer-events: none;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,gCAAgC;AACpC;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;IACrB,aAAa;AACjB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA,2CAA2C;AAC3C,sBAAsB;AACtB,2CAA2C;;AAE3C,2CAA2C;AAC3C,wBAAwB;AACxB,2CAA2C;AAC3C;IACI,uBAAuB;IACvB,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,kBAAkB;IAClB,aAAa;IACb,UAAU;IACV,sCAAsC;IACtC,mCAAmC;AACvC;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,qBAAqB;IACrB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,WAAW;IACX,UAAU;IACV,oBAAoB;AACxB",sourcesContent:["*{\n    padding: 0px;\n    margin: 0px;\n}\n\nbody{\n    height: 100vh;\n    box-sizing: border-box;\n    display: grid;\n    grid-template-rows: 2fr 20fr 1fr;\n}\n\n.header{\n    border: 1px black solid;\n}\n\n.main{\n    border: 1px red solid;\n    display: flex;\n}\n\n.footer{\n    border: 1px yellow solid;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* main area section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* Player Area Section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n.playerArea{\n    border: 1px black solid;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 40px;\n}\n\n.playerBoard{\n    width: 450px;\n    height: 450px;\n    border: 1px black solid;\n    position: relative;\n    display: grid;\n    z-index: 2;\n    grid-template-columns: repeat(10, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n}\n\n.playerBoard > div{\n    border: 1px black solid;\n}\n\n.square.active{\n    background-color: rgb(153, 81, 81);\n}\n\n.messageContainer{\n    border: 1px red solid;\n    height: 50px;\n    width: 450px;\n}\n\n.fakeBoard{\n    height: 100%;\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n    pointer-events: none;\n}\n\n"],sourceRoot:""}]);const l=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var a="",r=void 0!==t[5];return t[4]&&(a+="@supports (".concat(t[4],") {")),t[2]&&(a+="@media ".concat(t[2]," {")),r&&(a+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),a+=e(t),r&&(a+="}"),t[2]&&(a+="}"),t[4]&&(a+="}"),a})).join("")},t.i=function(e,a,r,n,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(i[s]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);r&&i[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),a&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=a):d[2]=a),n&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=n):d[4]="".concat(n)),t.push(d))}},t}},537:e=>{e.exports=function(e){var t=e[1],a=e[3];if(!a)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),n="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(n," */"),i=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([o]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function a(e){for(var a=-1,r=0;r<t.length;r++)if(t[r].identifier===e){a=r;break}return a}function r(e,r){for(var o={},i=[],l=0;l<e.length;l++){var s=e[l],c=r.base?s[0]+r.base:s[0],d=o[c]||0,p="".concat(c," ").concat(d);o[c]=d+1;var h=a(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==h)t[h].references++,t[h].updater(u);else{var A=n(u,r);r.byIndex=l,t.splice(l,0,{identifier:p,updater:A,references:1})}i.push(p)}return i}function n(e,t){var a=t.domAPI(t);return a.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;a.update(e=t)}else a.remove()}}e.exports=function(e,n){var o=r(e=e||[],n=n||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var l=a(o[i]);t[l].references--}for(var s=r(e,n),c=0;c<o.length;c++){var d=a(o[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}o=s}}},569:e=>{var t={};e.exports=function(e,a){var r=function(e){if(void 0===t[e]){var a=document.querySelector(e);if(window.HTMLIFrameElement&&a instanceof window.HTMLIFrameElement)try{a=a.contentDocument.head}catch(e){a=null}t[e]=a}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(a)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,a)=>{e.exports=function(e){var t=a.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(a){!function(e,t,a){var r="";a.supports&&(r+="@supports (".concat(a.supports,") {")),a.media&&(r+="@media ".concat(a.media," {"));var n=void 0!==a.layer;n&&(r+="@layer".concat(a.layer.length>0?" ".concat(a.layer):""," {")),r+=a.css,n&&(r+="}"),a.media&&(r+="}"),a.supports&&(r+="}");var o=a.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,a)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},244:(e,t,a)=>{e.exports=a.p+"03994293ef7490392c1d.svg"},856:(e,t,a)=>{e.exports=a.p+"6ecfaedfadcad45d038f.svg"},657:(e,t,a)=>{e.exports=a.p+"8eb3a04bec6a1ea0c90e.svg"},408:(e,t,a)=>{e.exports=a.p+"9a09c9fa8a7e75fb9c53.svg"},201:(e,t,a)=>{e.exports=a.p+"7a39206ca85b723d98dc.svg"},552:(e,t,a)=>{e.exports=a.p+"6bdf42adb78ae7daab9f.svg"},783:(e,t,a)=>{e.exports=a.p+"81bf6dff324525d55cef.svg"},481:(e,t,a)=>{e.exports=a.p+"e1cb995e01b01cf6d98e.svg"},665:(e,t,a)=>{e.exports=a.p+"c81af425aabe03dca11d.svg"},156:(e,t,a)=>{e.exports=a.p+"83a6bab6d3107a60c06f.svg"}},t={};function a(r){var n=t[r];if(void 0!==n)return n.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,a),o.exports}a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var t=a.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})();var r={};(()=>{a.d(r,{F:()=>G,t:()=>K});var e=a(379),t=a.n(e),n=a(795),o=a.n(n),i=a(569),l=a.n(i),s=a(565),c=a.n(s),d=a(216),p=a.n(d),h=a(589),u=a.n(h),A=a(426),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=l().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=p(),t()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;var f=a(244),y=a(856),g=a(657),v=a(408),b=a(201),C=a(552),x=a(783),B=a(481),S=a(665),w=a(156);function I(e){let t=[],a=document.createElement("div");a.textContent="",a.classList.add("fakeBoard"),document.querySelector(".playerBoard").appendChild(a);let r=e.allShips.length;for(let n=0;n<r;n++)t[n]=document.createElement("img"),"Battleship"===e.allShips[n].name?"horizontal"===e.allShips[n].axis?(t[n].src=f,t[n].style.height="45px",t[n].style.width="225px"):(t[n].src=y,t[n].style.height="225px",t[n].style.width="45px"):"Carrier"===e.allShips[n].name?"horizontal"===e.allShips[n].axis?(t[n].src=g,t[n].style.height="45px",t[n].style.width="180px"):(t[n].src=v,t[n].style.height="180px",t[n].style.width="45px"):"Submarine"===e.allShips[n].name?"horizontal"===e.allShips[n].axis?(t[n].src=S,t[n].style.height="45px",t[n].style.width="135px"):(t[n].src=w,t[n].style.height="135px",t[n].style.width="45px"):"Cruiser"===e.allShips[n].name?"horizontal"===e.allShips[n].axis?(t[n].src=b,t[n].style.height="45px",t[n].style.width="90px"):(t[n].src=C,t[n].style.height="90px",t[n].style.width="45px"):"Smallship"===e.allShips[n].name&&("horizontal"===e.allShips[n].axis?(t[n].src=x,t[n].style.height="45px",t[n].style.width="45px"):(t[n].src=B,t[n].style.height="45px",t[n].style.width="45px")),t[n].style.position="absolute",t[n].style.left=10*e.allShips[n].placedAt.x+"%",t[n].style.top=10*e.allShips[n].placedAt.y+"%",a.appendChild(t[n])}let k,L,E,M,q=0,z=[];function T(e,t){this.name=e,this.length=t,this.message="Place your "+this.name.substring(0,this.name.length)+` (${this.length})`}function P(e,t){z[0]=new T("Battleship",5),z[1]=new T("Carrier",4),z[2]=new T("Submarine",3),z[3]=new T("Submarine",3),z[4]=new T("Cruiser",2),z[5]=new T("Cruiser",2),z[6]=new T("Cruiser",2),z[7]=new T("Smallship",1),z[8]=new T("Smallship",1),z[9]=new T("Smallship",1);let a=document.querySelectorAll(".playerBoard")[t];document.querySelector(".rotateButton").addEventListener("click",Y),a.addEventListener("mouseout",U),j(e)}function j(e){document.querySelector(".message").textContent=z[q].message;let t=document.querySelector(".playerBoard");t.addEventListener("mouseover",k=t=>function(e,t){let a=Array.from(document.querySelectorAll(".active"));for(let e=0;e<a.length;e++)a[e].classList.remove("active");for(let a=0;a<10;a++)for(let r=0;r<10;r++)if(e.target===t.board[a][r].dom){if(document.querySelector(".rotateButton").classList.contains("makeHorizontal"))for(let e=0;e<z[q].length;e++)r+e>9||t.board[a][r+e].dom.classList.toggle("active");if(document.querySelector(".rotateButton").classList.contains("makeVertical"))for(let e=0;e<z[q].length;e++)a+e>9||t.board[a+e][r].dom.classList.toggle("active")}}(t,e)),t.addEventListener("click",L=t=>function(e,t){let a,r=document.querySelector(".playerBoard");r.removeEventListener("click",L),r.removeEventListener("mouseover",k),e.target.classList.contains("square")?(a=document.querySelector(".rotateButton").classList.contains("makeHorizontal")?"horizontal":"vertical",!0===function(e,t,a,r,n,o){try{return e.placeShip(t,a,n,o,r),!0}catch(e){return!1}}(t,e.target.location.y,e.target.location.x,a,z[q].name,z[q].length)?(I(t),q++,q===z.length?K("singlePlayer"):j(t)):j(t)):j(t)}(t,e))}function Y(){document.querySelector(".rotateButton").classList.toggle("makeVertical"),document.querySelector(".rotateButton").classList.toggle("makeHorizontal")}function U(){let e=Array.from(document.querySelectorAll(".active"));for(let t=0;t<e.length;t++)e[t].classList.remove("active")}function Z(e){$(e),R(e),H(e),H(e),N(e),N(e),N(e),V(e),V(e),V(e)}function $(e){M=Math.floor(2*Math.random()),E=0===M?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Battleship",5,E)}catch(t){$(e)}}function R(e){M=Math.floor(2*Math.random()),E=0===M?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Carrier",4,E)}catch(t){R(e)}}function H(e){M=Math.floor(2*Math.random()),E=0===M?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Submarine",3,E)}catch(t){H(e)}}function N(e){M=Math.floor(2*Math.random()),E=0===M?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Cruiser",2,E)}catch(t){N(e)}}function V(e){M=Math.floor(2*Math.random()),E=0===M?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Smallship",1,E)}catch(t){N(e)}}function W(e){e[0].player.winner,console.log("player 1 wins!")}function D(){document.querySelectorAll(".playerBoard")[1].addEventListener("click",O)}function O(e){for(let t=0;t<10;t++)for(let a=0;a<10;a++)if(G[1].playerBoard.board[t][a].dom===e.target){try{G[0].player.attack(t,a,G[1].playerBoard)}catch{D()}document.querySelectorAll(".playerBoard")[1].removeEventListener("click",O),!0===G[1].playerBoard.allShipsDestroyed?(G[0].player.winner=!0,W(G)):F()}}function F(){try{G[1].player.attack(0,0,G[0].playerBoard)}catch{F()}!0===G[0].playerBoard.allShipsDestroyed?(G[1].player.winner=!0,W(G)):D()}class J{constructor(e,t,a){this.name=e,this.length=t,this.remainingLength=t,this.axis=a,this.hit=function(){this.remainingLength--},this.isSunk=function(){return 0===this.remainingLength}}}class X{constructor(){this.board=[],this.allShips=[],this.allShipsDestroyed}init(){for(let e=0;e<10;e++){this.board[e]=[];for(let t=0;t<10;t++)this.board[e][t]={hasShip:!1,isShot:!1}}}placeShip(e,t,a,r,n){if("horizontal"===n){for(let a=0;a<r;a++)if(t+a>9||!0===this.board[e][t+a].hasShip)throw new Error("invalid horizontal position")}else for(let a=0;a<r;a++)if(e+a>9||!0===this.board[e+a][t].hasShip)throw new Error("invalid vertical position");if(this.allShips.push(new J(a,r,n)),this.allShips[this.allShips.length-1].placedAt={y:e,x:t},"horizontal"===n)for(let a=0;a<r;a++)this.board[e][t+a].hasShip=!0,this.board[e][t+a].ship=this.allShips[this.allShips.length-1];else for(let a=0;a<r;a++)this.board[e+a][t].hasShip=!0,this.board[e+a][t].ship=this.allShips[this.allShips.length-1]}receiveAttack(e,t){if(!0===this.board[e][t].isShot)throw new Error("invalid attacking location");this.board[e][t].isShot=!0,this.board[e][t].hasShip&&(this.board[e][t].ship.hit(),this.board[e][t].ship.isSunk(),this.checkShips())}checkShips(){let e=0;for(let t=0;t<this.allShips.length;t++)!0===this.allShips[t].isSunk()&&e++,e===this.allShips.length&&(this.allShipsDestroyed=!0)}}class _ extends X{constructor(e,t){super(t),this.name=e,this.usedAttacks=[]}attack(e,t,a){if("bot"===this.name){let e=Math.floor(9*Math.random()),t=Math.floor(9*Math.random());a.receiveAttack(e,t)}else a.receiveAttack(e,t)}}let G=[];function K(e){"singlePlayer"===e&&(function(){let e=new X;e.init();let t=new _("bot");G[1]={player:t,playerBoard:e},Z(G[1].playerBoard)}(),function(e){const t=document.querySelector(".main");t.textContent="";let a=document.createElement("div");a.classList.add("playerArea");let r=document.createElement("div");r.classList.add("playerArea"),t.appendChild(a),t.appendChild(r);let n=[];n[0]=document.createElement("div"),n[1]=document.createElement("div"),n[0].classList.add("message"),n[1].classList.add("message"),a.appendChild(n[0]),r.appendChild(n[1]);let o=document.createElement("div"),i=document.createElement("div");o.classList.add("playerBoard"),i.classList.add("playerBoard"),a.appendChild(o),r.appendChild(i);for(let t=0;t<10;t++)for(let a=0;a<10;a++)e[1].playerBoard.board[t][a].dom=document.createElement("div"),e[1].playerBoard.board[t][a].dom.classList.add("square"),o.appendChild(e[0].playerBoard.board[t][a].dom),i.appendChild(e[1].playerBoard.board[t][a].dom),!0===e[0].playerBoard.board[t][a].hasShip&&(e[0].playerBoard.board[t][a].dom.classList.add("active"),e[0].playerBoard.board[t][a].dom.classList.add(`${e[0].playerBoard.board[t][a].ship.axis}${e[0].playerBoard.board[t][a].ship.name}`)),!0===e[1].playerBoard.board[t][a].hasShip&&(e[1].playerBoard.board[t][a].dom.classList.add("active"),e[1].playerBoard.board[t][a].dom.classList.add(`${e[1].playerBoard.board[t][a].ship.axis}${e[1].playerBoard.board[t][a].ship.name}`))}(G),I(G[0].playerBoard),D())}document.querySelectorAll("button")[0].addEventListener("click",(()=>{!function(){let e=new X;e.init();let t=new _("Player1");G[0]={player:t,playerBoard:e},function(){const e=document.querySelector(".main");e.textContent="";const t=document.createElement("div");e.appendChild(t),t.classList.add("playerArea");const a=document.createElement("div");t.appendChild(a),a.classList.add("messageContainer");const r=document.createElement("div");a.appendChild(r),r.classList.add("message");const n=document.createElement("button");t.appendChild(n),n.textContent="rotate",n.classList.add("rotateButton","makeVertical","makeHorizontal"),n.classList.toggle("makeVertical");const o=document.createElement("div");o.classList.add("playerBoard"),t.appendChild(o)}(),function(e,t){let a=document.querySelectorAll(".playerBoard")[0];for(let t=0;t<10;t++)for(let r=0;r<10;r++)e[t][r].dom=document.createElement("div"),e[t][r].dom.classList.add("active"),e[t][r].dom.classList.add("square"),e[t][r].dom.classList.toggle("active"),e[t][r].dom.location={y:t,x:r},a.appendChild(e[t][r].dom)}(G[0].playerBoard.board),P(G[0].playerBoard,0),I(G[0].playerBoard)}()})),console.log(G)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,