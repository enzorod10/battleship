(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>h});var a=t(537),r=t.n(a),o=t(645),i=t.n(o),l=t(667),s=t.n(l),d=new URL(t(404),t.b),c=new URL(t(266),t.b),p=i()(r()),A=s()(d),u=s()(c);p.push([e.id,"*{\n    padding: 0px;\n    margin: 0px;\n    user-select: none;\n}\nP{\n    margin: 0px;\n    padding: 0px;\n}\n\nbody{\n    background: linear-gradient(217deg, rgba(52, 88, 122, 0.582), rgba(173, 0, 0, 0) 70.71%),\n            linear-gradient(127deg, rgba(24, 24, 37, 0.8), rgba(28, 240, 28, 0) 70.71%),\n            linear-gradient(336deg, rgba(32, 57, 80, 0.301), rgba(0,0,255,0) 70.71%);\n    height: 100vh;\n    box-sizing: border-box;\n    display: grid;\n}\n\n.header{\n    border: 1px black solid;\n}\n\n.main{\n    border: 1px red solid;\n    display: flex;\n}\n\n.footer{\n    border: 1px yellow solid;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* main area section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n.startingMenu,\n.gamePhase{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n.battleshipLogo{\n    max-height: 10%;\n}\n\n.battleshipImage{\n    max-height: 20%;\n    margin-top: -20px;\n}\n\n.optionsContainer{\n    display: flex;\n    gap: 15px;\n    max-height: 20%;\n}\n\n.playAgainstPlayer,\n.playAgainstBot,\n.easyDifficulty,\n.hardDifficulty,\n.playMultiplayerButton,\n.deployButton{\n    border: 1px black solid;\n    padding: 8px 15px 8px 15px;\n    cursor: pointer;\n    border-radius: 2px;\n    font-weight: 600;\n}\n\n.playAgainstPlayer:hover,\n.playAgainstBot:hover,\n.easyDifficulty:hover,\n.hardDifficulty:hover,\n.playMultiplayerButton:hover,\n.deployButton:hover{\n    background-color: rgb(0, 0, 0);\n    color: white;\n}\n\n.player1NameContainer,\n.player2NameContainer{\n    display: flex;\n    flex-direction: column;\n    font-weight: 600;\n    gap: 8px;\n    position: relative;\n}\n\n.player1NameContainer > div:nth-child(1),\n.player2NameContainer > div:nth-child(1){\n    text-align: center;\n}\n\n.player1NameContainer > input:nth-child(2),\n.player2NameContainer > input:nth-child(2){\n    border-top: none;\n    border-left: none;\n    border-right: none;\n    border-bottom: 1px black solid;  \n    background-color: transparent;\n    width: 150px;\n    text-align: center;\n}\n\n.player1NameContainer > input:nth-child(2):focus,\n.player2NameContainer > input:nth-child(2):focus{\n    outline: none;\n}\n\n.playMultiplayerButton{\n    margin-top: 15px;\n}\n\n.errorMessage{\n    color: red;\n    font-weight: 500;\n    position: absolute;\n    bottom: -15px;\n    font-size: 11px;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* Player Area Section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n.playerArea{\n    width: 380px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 40px;\n    position: relative;\n}\n\n.playerBoard{\n    border: 10px black solid;\n    width: 380px;\n    height: 380px;\n    position: relative;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n}\n\n.playerBoard > div{\n    border: 1px black solid;\n    cursor: pointer;\n}\n\n.square.active{\n    background-color: rgb(81, 110, 153);\n}\n\n.fakeBoard{\n    height: 100%;\n    position: absolute;\n    width: 100%;\n    pointer-events: none;\n    box-sizing: border-box;\n    pointer-events: none;\n\n}\n\n.fakeBoard > img{\n    /* background: linear-gradient(217deg, rgba(52, 88, 122, 0.582), rgba(173, 0, 0, 0) 70.71%),\n            linear-gradient(127deg, rgba(24, 24, 37, 0.8), rgba(28, 240, 28, 0) 70.71%),\n            linear-gradient(336deg, rgba(32, 57, 80, 0.301), rgba(0,0,255,0) 70.71%); */\n    box-sizing: border-box;\n}\n\n.playerIdentification0{\n    position: absolute;\n    bottom: -21px;\n    right: -1px;\n    height: 20px;\n    min-width: 76px;\n    justify-content: center;\n    display: flex;\n    align-items: center;\n    border-top: none;\n    cursor: none;\n}\n\n.playerIdentification1{\n    border-bottom: none;\n    position: absolute;\n    height: 20px;\n    top: -21px;\n    left: -1px;\n    min-width: 76px;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: none;\n}\n\n.message{\n    display: flex;\n    flex-direction: column;\n    font-size: 15px;\n}\n\n.rotateButton{\n    border-radius: 10%;\n    padding: 5px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    content: ' ';\n    height: 40px;\n    width: 40px;\n}\n\n.rotateButton.makeHorizontal{\n    background-image: url("+A+");\n    background-size: cover;\n}\n\n.rotateButton.makeVertical{\n    background-image: url("+u+");\n    background-size: cover;\n}\n\n.shot,\n.square.shot{\n    background: linear-gradient(217deg, rgba(255, 255, 255, 0.582), rgba(255, 255, 255, 0) 70.71%),\n            linear-gradient(127deg, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0) 70.71%),\n            linear-gradient(336deg, rgba(255, 4, 4, 0.301), rgba(255, 0, 0, 0) 70.71%);\n    box-sizing: border-box;\n}\n\n.shot.shipHit{\n    background-color: red;\n    border-radius: 50%;\n    background-size: 10px;\n    box-sizing: border-box;\n}\n\n.shot.shipHit.shipSunk{\n    border-radius: 0px;\n    background-color: red;\n    border: none;\n    box-sizing: border-box;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,WAAW;IACX,iBAAiB;AACrB;AACA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI;;oFAEgF;IAChF,aAAa;IACb,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;IACrB,aAAa;AACjB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA,2CAA2C;AAC3C,sBAAsB;AACtB,2CAA2C;;AAE3C;;IAEI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,eAAe;AACnB;;AAEA;;;;;;IAMI,uBAAuB;IACvB,0BAA0B;IAC1B,eAAe;IACf,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;;;;;;IAMI,8BAA8B;IAC9B,YAAY;AAChB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;IAChB,QAAQ;IACR,kBAAkB;AACtB;;AAEA;;IAEI,kBAAkB;AACtB;;AAEA;;IAEI,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,8BAA8B;IAC9B,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;AACtB;;AAEA;;IAEI,aAAa;AACjB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,UAAU;IACV,gBAAgB;IAChB,kBAAkB;IAClB,aAAa;IACb,eAAe;AACnB;;AAEA,2CAA2C;AAC3C,wBAAwB;AACxB,2CAA2C;AAC3C;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,wBAAwB;IACxB,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,aAAa;IACb,sCAAsC;IACtC,mCAAmC;AACvC;;AAEA;IACI,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,WAAW;IACX,oBAAoB;IACpB,sBAAsB;IACtB,oBAAoB;;AAExB;;AAEA;IACI;;uFAEmF;IACnF,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,WAAW;IACX,YAAY;IACZ,eAAe;IACf,uBAAuB;IACvB,aAAa;IACb,mBAAmB;IACnB,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,YAAY;IACZ,UAAU;IACV,UAAU;IACV,eAAe;IACf,kBAAkB;IAClB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,yDAAkD;IAClD,sBAAsB;AAC1B;;AAEA;IACI,yDAAoD;IACpD,sBAAsB;AAC1B;;AAEA;;IAEI;;sFAEkF;IAClF,sBAAsB;AAC1B;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;IAClB,qBAAqB;IACrB,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,YAAY;IACZ,sBAAsB;AAC1B",sourcesContent:["*{\n    padding: 0px;\n    margin: 0px;\n    user-select: none;\n}\nP{\n    margin: 0px;\n    padding: 0px;\n}\n\nbody{\n    background: linear-gradient(217deg, rgba(52, 88, 122, 0.582), rgba(173, 0, 0, 0) 70.71%),\n            linear-gradient(127deg, rgba(24, 24, 37, 0.8), rgba(28, 240, 28, 0) 70.71%),\n            linear-gradient(336deg, rgba(32, 57, 80, 0.301), rgba(0,0,255,0) 70.71%);\n    height: 100vh;\n    box-sizing: border-box;\n    display: grid;\n}\n\n.header{\n    border: 1px black solid;\n}\n\n.main{\n    border: 1px red solid;\n    display: flex;\n}\n\n.footer{\n    border: 1px yellow solid;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* main area section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n.startingMenu,\n.gamePhase{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n.battleshipLogo{\n    max-height: 10%;\n}\n\n.battleshipImage{\n    max-height: 20%;\n    margin-top: -20px;\n}\n\n.optionsContainer{\n    display: flex;\n    gap: 15px;\n    max-height: 20%;\n}\n\n.playAgainstPlayer,\n.playAgainstBot,\n.easyDifficulty,\n.hardDifficulty,\n.playMultiplayerButton,\n.deployButton{\n    border: 1px black solid;\n    padding: 8px 15px 8px 15px;\n    cursor: pointer;\n    border-radius: 2px;\n    font-weight: 600;\n}\n\n.playAgainstPlayer:hover,\n.playAgainstBot:hover,\n.easyDifficulty:hover,\n.hardDifficulty:hover,\n.playMultiplayerButton:hover,\n.deployButton:hover{\n    background-color: rgb(0, 0, 0);\n    color: white;\n}\n\n.player1NameContainer,\n.player2NameContainer{\n    display: flex;\n    flex-direction: column;\n    font-weight: 600;\n    gap: 8px;\n    position: relative;\n}\n\n.player1NameContainer > div:nth-child(1),\n.player2NameContainer > div:nth-child(1){\n    text-align: center;\n}\n\n.player1NameContainer > input:nth-child(2),\n.player2NameContainer > input:nth-child(2){\n    border-top: none;\n    border-left: none;\n    border-right: none;\n    border-bottom: 1px black solid;  \n    background-color: transparent;\n    width: 150px;\n    text-align: center;\n}\n\n.player1NameContainer > input:nth-child(2):focus,\n.player2NameContainer > input:nth-child(2):focus{\n    outline: none;\n}\n\n.playMultiplayerButton{\n    margin-top: 15px;\n}\n\n.errorMessage{\n    color: red;\n    font-weight: 500;\n    position: absolute;\n    bottom: -15px;\n    font-size: 11px;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* Player Area Section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n.playerArea{\n    width: 380px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 40px;\n    position: relative;\n}\n\n.playerBoard{\n    border: 10px black solid;\n    width: 380px;\n    height: 380px;\n    position: relative;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n}\n\n.playerBoard > div{\n    border: 1px black solid;\n    cursor: pointer;\n}\n\n.square.active{\n    background-color: rgb(81, 110, 153);\n}\n\n.fakeBoard{\n    height: 100%;\n    position: absolute;\n    width: 100%;\n    pointer-events: none;\n    box-sizing: border-box;\n    pointer-events: none;\n\n}\n\n.fakeBoard > img{\n    /* background: linear-gradient(217deg, rgba(52, 88, 122, 0.582), rgba(173, 0, 0, 0) 70.71%),\n            linear-gradient(127deg, rgba(24, 24, 37, 0.8), rgba(28, 240, 28, 0) 70.71%),\n            linear-gradient(336deg, rgba(32, 57, 80, 0.301), rgba(0,0,255,0) 70.71%); */\n    box-sizing: border-box;\n}\n\n.playerIdentification0{\n    position: absolute;\n    bottom: -21px;\n    right: -1px;\n    height: 20px;\n    min-width: 76px;\n    justify-content: center;\n    display: flex;\n    align-items: center;\n    border-top: none;\n    cursor: none;\n}\n\n.playerIdentification1{\n    border-bottom: none;\n    position: absolute;\n    height: 20px;\n    top: -21px;\n    left: -1px;\n    min-width: 76px;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: none;\n}\n\n.message{\n    display: flex;\n    flex-direction: column;\n    font-size: 15px;\n}\n\n.rotateButton{\n    border-radius: 10%;\n    padding: 5px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    content: ' ';\n    height: 40px;\n    width: 40px;\n}\n\n.rotateButton.makeHorizontal{\n    background-image: url('./assets/makeVertical.png');\n    background-size: cover;\n}\n\n.rotateButton.makeVertical{\n    background-image: url('./assets/makeHorizontal.png');\n    background-size: cover;\n}\n\n.shot,\n.square.shot{\n    background: linear-gradient(217deg, rgba(255, 255, 255, 0.582), rgba(255, 255, 255, 0) 70.71%),\n            linear-gradient(127deg, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0) 70.71%),\n            linear-gradient(336deg, rgba(255, 4, 4, 0.301), rgba(255, 0, 0, 0) 70.71%);\n    box-sizing: border-box;\n}\n\n.shot.shipHit{\n    background-color: red;\n    border-radius: 50%;\n    background-size: 10px;\n    box-sizing: border-box;\n}\n\n.shot.shipHit.shipSunk{\n    border-radius: 0px;\n    background-color: red;\n    border: none;\n    box-sizing: border-box;\n}\n"],sourceRoot:""}]);const h=p},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,r,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);a&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),n.push(c))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(r," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var o={},i=[],l=0;l<e.length;l++){var s=e[l],d=a.base?s[0]+a.base:s[0],c=o[d]||0,p="".concat(d," ").concat(c);o[d]=c+1;var A=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)n[A].references++,n[A].updater(u);else{var h=r(u,a);a.byIndex=l,n.splice(l,0,{identifier:p,updater:h,references:1})}i.push(p)}return i}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var o=a(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var l=t(o[i]);n[l].references--}for(var s=a(e,r),d=0;d<o.length;d++){var c=t(o[d]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}o=s}}},569:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},207:(e,n,t)=>{e.exports=t.p+"8a740991c74261e6fd56.png"},886:(e,n,t)=>{e.exports=t.p+"4be3df741b793215f8cb.png"},266:(e,n,t)=>{e.exports=t.p+"980b543822a1bf762052.png"},404:(e,n,t)=>{e.exports=t.p+"886d1ad38da31defe057.png"},244:(e,n,t)=>{e.exports=t.p+"03994293ef7490392c1d.svg"},856:(e,n,t)=>{e.exports=t.p+"6ecfaedfadcad45d038f.svg"},657:(e,n,t)=>{e.exports=t.p+"8eb3a04bec6a1ea0c90e.svg"},408:(e,n,t)=>{e.exports=t.p+"9a09c9fa8a7e75fb9c53.svg"},201:(e,n,t)=>{e.exports=t.p+"7a39206ca85b723d98dc.svg"},552:(e,n,t)=>{e.exports=t.p+"6bdf42adb78ae7daab9f.svg"},783:(e,n,t)=>{e.exports=t.p+"81bf6dff324525d55cef.svg"},481:(e,n,t)=>{e.exports=t.p+"e1cb995e01b01cf6d98e.svg"},665:(e,n,t)=>{e.exports=t.p+"c81af425aabe03dca11d.svg"},156:(e,n,t)=>{e.exports=t.p+"83a6bab6d3107a60c06f.svg"}},n={};function t(a){var r=n[a];if(void 0!==r)return r.exports;var o=n[a]={id:a,exports:{}};return e[a](o,o.exports,t),o.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");a.length&&(e=a[a.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,(()=>{var e=t(379),n=t.n(e),a=t(795),r=t.n(a),o=t(569),i=t.n(o),l=t(565),s=t.n(l),d=t(216),c=t.n(d),p=t(589),A=t.n(p),u=t(426),h={};h.styleTagTransform=A(),h.setAttributes=s(),h.insert=i().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=c(),n()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;var m=t(886),g=t(207),y=t(244),B=t(856),b=t(657),f=t(408),C=t(201),x=t(552),v=t(783),I=t(481),S=t(665),k=t(156);function E(e){let n=[],t=document.createElement("div");t.textContent="",t.classList.add("fakeBoard"),document.querySelector(".playerBoard").appendChild(t);let a=e.allShips.length;for(let r=0;r<a;r++)n[r]=document.createElement("img"),"Battleship"===e.allShips[r].name?"horizontal"===e.allShips[r].axis?(n[r].src=y,n[r].style.height="38px",n[r].style.width="190px"):(n[r].src=B,n[r].style.height="190px",n[r].style.width="38px"):"Carrier"===e.allShips[r].name?"horizontal"===e.allShips[r].axis?(n[r].src=b,n[r].style.height="38px",n[r].style.width="152px"):(n[r].src=f,n[r].style.height="152px",n[r].style.width="38px"):"Submarine"===e.allShips[r].name?"horizontal"===e.allShips[r].axis?(n[r].src=S,n[r].style.height="38px",n[r].style.width="114px"):(n[r].src=k,n[r].style.height="114px",n[r].style.width="38px"):"Cruiser"===e.allShips[r].name?"horizontal"===e.allShips[r].axis?(n[r].src=C,n[r].style.height="38px",n[r].style.width="76px"):(n[r].src=x,n[r].style.height="76px",n[r].style.width="38px"):"Smallship"===e.allShips[r].name&&("horizontal"===e.allShips[r].axis?(n[r].src=v,n[r].style.height="38px",n[r].style.width="38px"):(n[r].src=I,n[r].style.height="38px",n[r].style.width="38px")),n[r].style.position="absolute",n[r].style.left=10*e.allShips[r].placedAt.x+"%",n[r].style.top=10*e.allShips[r].placedAt.y+"%",t.appendChild(n[r])}let L,w,q,M,P,z=[];function Y(e,n){this.name=e,this.length=n,this.message="Place your "+this.name.substring(0,this.name.length)+` (${this.length})`}function D(e,n){q=0,z[0]=new Y("Battleship",5),z[1]=new Y("Carrier",4),z[2]=new Y("Submarine",3),z[3]=new Y("Submarine",3),z[4]=new Y("Cruiser",2),z[5]=new Y("Cruiser",2),z[6]=new Y("Cruiser",2),z[7]=new Y("Smallship",1),z[8]=new Y("Smallship",1),z[9]=new Y("Smallship",1);let t=document.querySelector(".playerBoard");document.querySelector(".rotateButton").addEventListener("click",T),t.addEventListener("mouseout",j),N(e,n)}function N(e,n){document.querySelector(".message").textContent=z[q].message;let t=document.querySelector(".playerBoard");t.addEventListener("mouseover",L=n=>function(e,n){let t=Array.from(document.querySelectorAll(".active"));for(let e=0;e<t.length;e++)t[e].classList.remove("active");for(let t=0;t<10;t++)for(let a=0;a<10;a++)if(e.target===n.board[t][a].dom){if(document.querySelector(".rotateButton").classList.contains("makeHorizontal"))for(let e=0;e<z[q].length;e++)a+e>9||n.board[t][a+e].dom.classList.toggle("active");if(document.querySelector(".rotateButton").classList.contains("makeVertical"))for(let e=0;e<z[q].length;e++)t+e>9||n.board[t+e][a].dom.classList.toggle("active")}}(n,e)),t.addEventListener("click",w=t=>function(e,n,t){let a,r=document.querySelector(".playerBoard");r.removeEventListener("click",w),r.removeEventListener("mouseover",L),e.target.classList.contains("square")?(a=document.querySelector(".rotateButton").classList.contains("makeHorizontal")?"horizontal":"vertical",!0===function(e,n,t,a,r,o){try{return e.placeShip(n,t,r,o,a),!0}catch(e){return!1}}(n,e.target.location.y,e.target.location.x,a,z[q].name,z[q].length)?(E(n),q++,q===z.length?0===t?(Z(),document.querySelector(".message").textContent="All ships have been placed. You may now deploy.",document.querySelector(".deployButton").addEventListener("click",pe)):1===t&&(Z(),document.querySelector(".message").textContent="All ships have been placed. You may now deploy.",document.querySelector(".deployButton").addEventListener("click",Ae)):N(n,t)):N(n,t)):N(n,t)}(t,e,n))}function T(){document.querySelector(".rotateButton").classList.toggle("makeVertical"),document.querySelector(".rotateButton").classList.toggle("makeHorizontal")}function j(){let e=Array.from(document.querySelectorAll(".active"));for(let n=0;n<e.length;n++)e[n].classList.remove("active")}function Z(){let e=document.createElement("div");e.classList.add("deployButton"),document.querySelector(".gamePhase").appendChild(e),e.textContent="DEPLOY"}function G(e){H(e),U(e),R(e),R(e),F(e),F(e),F(e),V(e),V(e),V(e)}function H(e){P=Math.floor(2*Math.random()),M=0===P?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Battleship",5,M)}catch(n){H(e)}}function U(e){P=Math.floor(2*Math.random()),M=0===P?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Carrier",4,M)}catch(n){U(e)}}function R(e){P=Math.floor(2*Math.random()),M=0===P?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Submarine",3,M)}catch(n){R(e)}}function F(e){P=Math.floor(2*Math.random()),M=0===P?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Cruiser",2,M)}catch(n){F(e)}}function V(e){P=Math.floor(2*Math.random()),M=0===P?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Smallship",1,M)}catch(n){F(e)}}function W(e,n){const t=document.querySelector(".gamePhase");t.style.justifyContent="space-around";let a=document.createElement("div");if(a.classList.add("playerArea"),t.appendChild(a),0===n){let e=document.querySelector(".message"),n=document.createElement("div");e.appendChild(n);let a=document.createElement("div");e.appendChild(a),e.textContent="",e.classList.add("message"),t.appendChild(e),document.querySelector(".playerArea").remove(),document.querySelector(".battleshipLogo").remove()}let r=document.createElement("div");r.classList.add("playerBoard"),a.appendChild(r);for(let n=0;n<10;n++)for(let t=0;t<10;t++)r.appendChild(e.playerBoard.board[n][t].dom),!0===e.playerBoard.board[n][t].hasShip&&(e.playerBoard.board[n][t].dom.classList.add("active"),e.playerBoard.board[n][t].dom.classList.add(`${e.playerBoard.board[n][t].ship.axis}${e.playerBoard.board[n][t].ship.name}`))}function O(e){!0===e[0].player.winner?document.querySelector(".message").textContent=e[0].player.name+"has won the game!":document.querySelector(".message").textContent=e[1].player.name+"has won the game!"}function $(e){let n=e.playerBoard.chronologicalGeneralDamage[e.playerBoard.chronologicalGeneralDamage.length-1].y,t=e.playerBoard.chronologicalGeneralDamage[e.playerBoard.chronologicalGeneralDamage.length-1].x;if(e.playerBoard.board[n][t].dom.classList.add("shot"),e.playerBoard.board[n][t].hasShip){let n=e.playerBoard.chronologicalGeneralDamage[e.playerBoard.chronologicalGeneralDamage.length-1].y,t=e.playerBoard.chronologicalGeneralDamage[e.playerBoard.chronologicalGeneralDamage.length-1].x;e.playerBoard.board[n][t].dom.classList.add("shipHit")}for(let n=0;n<e.playerBoard.allShips.length;n++)if(!0===e.playerBoard.allShips[n].isSunk()){let t=e.playerBoard.allShips[n].placedAt.y,a=e.playerBoard.allShips[n].placedAt.x;if(!e.playerBoard.board[t][a].dom.classList.contains("shipSunk"))if("vertical"===e.playerBoard.allShips[n].axis)for(let r=0;r<e.playerBoard.allShips[n].length;r++)console.log("test"),e.playerBoard.board[t+r][a].dom.classList.add("shipSunk");else for(let r=0;r<e.playerBoard.allShips[n].length;r++)e.playerBoard.board[t][a+r].dom.classList.add("shipSunk")}}let X=0,_={};function Q(){document.querySelector(".message").textContent=de[0].player.name+" It's your turn to attack! Pick a location to shoot at.",J()}function J(){"singlePlayer"===de[0].playerBoard.mode?0===X&&(document.querySelector(".message").textContent="It's your turn to attack!",X++):document.querySelector(".message").textContent=de[0].player.name+", it's your turn to attack.",document.querySelectorAll(".playerBoard")[1].addEventListener("click",K)}function K(e){document.querySelectorAll(".playerBoard")[1].removeEventListener("click",K);let n=!1;for(let t=0;t<10;t++)for(let a=0;a<10;a++)if(de[1].playerBoard.board[t][a].dom===e.target){try{de[0].player.attack(t,a,de[1].playerBoard)}catch{n=!0,document.querySelector(".message").textContent="Invalid shot. Pick another location.",setTimeout(J,2e3)}n||("singlePlayer"===de[0].playerBoard.mode?(document.querySelector(".message").textContent="You shoot..",$(de[1]),setTimeout(te,1500,de[0],de[1],t,a)):(document.querySelector(".message").textContent=de[0].player.name+" has shot..",$(de[1]),setTimeout(te,1500,de[0],de[1],t,a))),!0===de[1].playerBoard.allShipsDestroyed?(de[0].player.winner=!0,setTimeout(O,2e3,de)):setTimeout(ee,3e3)}}function ee(){if("singlePlayer"===de[0].playerBoard.mode){document.querySelector(".message").textContent="";try{de[1].player.attack(0,0,de[0].playerBoard)}catch{ee()}_.y=de[0].playerBoard.chronologicalGeneralDamage[de[0].playerBoard.chronologicalGeneralDamage.length-1].y,_.x=de[0].playerBoard.chronologicalGeneralDamage[de[0].playerBoard.chronologicalGeneralDamage.length-1].x,document.querySelector(".message").textContent="The bot has shot..",setTimeout(te,1500,de[1],de[0],_.y,_.x),$(de[0]),!0===de[0].playerBoard.allShipsDestroyed?(de[1].player.winner=!0,setTimeout(O,2e3,de)):setTimeout(J,3e3)}else document.querySelector(".message").textContent=de[1].player.name+", it's your turn to attack.",document.querySelectorAll(".playerBoard")[0].addEventListener("click",ne)}function ne(e){document.querySelectorAll(".playerBoard")[0].removeEventListener("click",ne);let n=!1;for(let t=0;t<10;t++)for(let a=0;a<10;a++)if(de[0].playerBoard.board[t][a].dom===e.target){try{de[1].player.attack(t,a,de[0].playerBoard)}catch{n=!0,document.querySelector(".message").textContent="Invalid shot. Pick another location.",setTimeout(ee,2e3)}n||(document.querySelector(".message").textContent=de[1].player.name+" has shot..",$(de[0]),setTimeout(te,1500,de[1],de[0],t,a)),!0===de[0].playerBoard.allShipsDestroyed?(de[1].player.winner=!0,setTimeout(O,2e3,de)):setTimeout(J,3e3)}}function te(e,n,t,a){!0===n.playerBoard.board[t][a].hasShip?"bot"===e.player.name?document.querySelector(".message").textContent="The bot has shot.. and they hit your "+ae(n.playerBoard.board[t][a].ship.name)+"!":"bot"===n.player.name?document.querySelector(".message").textContent="You shoot.. and managed to hit the bot's "+ae(n.playerBoard.board[t][a].ship.name)+"!":"bot"!==e.player.name&&(document.querySelector(".message").textContent=e.player.name+" has shot.. and they hit "+n.player.name+"'s "+ae(n.playerBoard.board[t][a].ship.name)+"!"):"bot"===e.player.name?document.querySelector(".message").textContent="The bot has shot.. and they missed.":"bot"===n.player.name?document.querySelector(".message").textContent="You shoot.. and you hit nothing.":"bot"!==e.player.name&&(document.querySelector(".message").textContent=e.player.name+" has shot.. and they hit nothing.")}function ae(e){return e.charAt(0).toLowerCase()+e.slice(1)}class re{constructor(e,n,t){this.name=e,this.length=n,this.remainingLength=n,this.axis=t,this.hit=function(){this.remainingLength--},this.isSunk=function(){return 0===this.remainingLength}}}class oe{constructor(){this.board=[],this.allShips=[],this.allShipsDestroyed,this.chronologicalGeneralDamage=[],this.chronologicalShipDamage=[]}init(){for(let e=0;e<10;e++){this.board[e]=[];for(let n=0;n<10;n++)this.board[e][n]={hasShip:!1,isShot:!1}}}placeShip(e,n,t,a,r){if("horizontal"===r){for(let t=0;t<a;t++)if(n+t>9||!0===this.board[e][n+t].hasShip)throw new Error("invalid horizontal position")}else for(let t=0;t<a;t++)if(e+t>9||!0===this.board[e+t][n].hasShip)throw new Error("invalid vertical position");if(this.allShips.push(new re(t,a,r)),this.allShips[this.allShips.length-1].placedAt={y:e,x:n},"horizontal"===r)for(let t=0;t<a;t++)this.board[e][n+t].hasShip=!0,this.board[e][n+t].ship=this.allShips[this.allShips.length-1];else for(let t=0;t<a;t++)this.board[e+t][n].hasShip=!0,this.board[e+t][n].ship=this.allShips[this.allShips.length-1]}receiveAttack(e,n){if(!0===this.board[e][n].isShot)throw new Error("invalid attacking location");this.chronologicalGeneralDamage.push({y:e,x:n}),this.board[e][n].isShot=!0,this.board[e][n].hasShip&&(this.chronologicalShipDamage.push({y:e,x:n}),this.board[e][n].ship.hit(),this.board[e][n].ship.isSunk(),this.checkShips())}checkShips(){let e=0;for(let n=0;n<this.allShips.length;n++)!0===this.allShips[n].isSunk()&&e++,e===this.allShips.length&&(this.allShipsDestroyed=!0)}}class ie extends oe{constructor(e,n){super(n),this.name=e,this.usedAttacks=[]}attack(e,n,t){if("bot"===this.name){let e=Math.floor(9*Math.random()),n=Math.floor(9*Math.random());t.receiveAttack(e,n)}else t.receiveAttack(e,n)}}let le,se,de=[];function ce(e,n,t){let a,r;0===t&&"singlePlayer"!==e&&(le=document.querySelector(".inputPlayer1Name").value,se=document.querySelector(".inputPlayer2Name").value,document.querySelector(".startingMenu").remove());let o=new oe;o.init(),"singlePlayer"===e?a=new ie("Human"):(r=0===t?le:se,a=new ie(r)),de[t]={player:a,playerBoard:o},"singlePlayer"===e&&(de[0].difficulty=n,de[0].playerBoard.mode="singlePlayer"),function(e){if(0===e){const e=document.createElement("div");e.classList.add("gamePhase"),document.body.appendChild(e);let n=document.createElement("img");n.classList.add("battleshipLogo"),n.src=m,e.appendChild(n)}const n=document.createElement("div");document.querySelector(".gamePhase").appendChild(n),n.classList.add("playerArea");const t=document.createElement("div");n.appendChild(t),t.classList.add("message");const a=document.createElement("div");n.appendChild(a),a.classList.add("rotateButton","makeVertical","makeHorizontal"),a.classList.toggle("makeVertical");const r=document.createElement("div");r.classList.add("playerBoard"),n.appendChild(r)}(t),function(e){let n=document.querySelector(".playerBoard");for(let t=0;t<10;t++)for(let a=0;a<10;a++)e[t][a].dom=document.createElement("div"),e[t][a].dom.classList.add("active"),e[t][a].dom.classList.add("square"),e[t][a].dom.classList.toggle("active"),e[t][a].dom.location={y:t,x:a},n.appendChild(e[t][a].dom)}(de[t].playerBoard.board),D(de[t].playerBoard,t)}function pe(){"singlePlayer"===de[0].playerBoard.mode?(document.querySelector(".deployButton").removeEventListener("click",pe),document.querySelector(".deployButton").remove(),function(){let e=new oe;e.init();let n=new ie("bot");de[1]={player:n,playerBoard:e},function(e){for(let n=0;n<10;n++)for(let t=0;t<10;t++)e.board[n][t].dom=document.createElement("div")}(de[1].playerBoard),G(de[1].playerBoard)}(),W(de[0],0),W(de[1],1),E(de[0].playerBoard),ue(de[0],0),ue(de[1],1),j(),Q()):(document.querySelector(".deployButton").removeEventListener("click",pe),document.querySelector(".playerArea").remove(),document.querySelector(".deployButton").remove(),ce("multiPlayer","multi",1))}function Ae(){document.querySelector(".deployButton").removeEventListener("click",Ae),document.querySelector(".deployButton").remove(),W(de[0],0),W(de[1],1),ue(de[0],0),ue(de[1],1),j(),Q()}function ue(e,n){const t=document.createElement("div");t.classList.add("playerIdentification"+n),t.textContent=e.player.name,"bot"===t.textContent&&(t.textContent="Bot"),document.querySelectorAll(".playerBoard")[n].appendChild(t)}console.log(de);let he=[];const me=document.createElement("div");me.classList.add("startingMenu"),document.body.appendChild(me);const ge=document.createElement("img");ge.classList.add("battleshipLogo"),ge.src=m,me.appendChild(ge);const ye=document.createElement("img");ye.classList.add("battleshipImage"),ye.src=g,me.appendChild(ye);const Be=document.createElement("div");Be.classList.add("optionsContainer"),me.appendChild(Be);const be=document.createElement("div");be.classList.add("playAgainstBot"),be.textContent="SINGLE PLAYER",Be.appendChild(be);const fe=document.createElement("div");function Ce(){he=[];let e=document.querySelectorAll(".errorMessage");for(let n=0;n<e.length;n++)e[n].remove();""===document.querySelector(".inputPlayer1Name").value&&(he.push(document.createElement("div")),he[he.length-1].classList.add("errorMessage"),he[he.length-1].textContent="Player 1 name can't be left empty",document.querySelector(".player1NameContainer").appendChild(he[he.length-1])),""===document.querySelector(".inputPlayer2Name").value?(he.push(document.createElement("div")),he[he.length-1].classList.add("errorMessage"),he[he.length-1].textContent="Player 2 name can't be left empty",document.querySelector(".player2NameContainer").appendChild(he[he.length-1])):(document.querySelector(".playMultiplayerButton").removeEventListener("click",Ce),ce("multiPlayer","multi",0,document.querySelector(".inputPlayer1Name").value,document.querySelector(".inputPlayer2Name").value))}fe.classList.add("playAgainstPlayer"),fe.textContent="MULTI PLAYER",Be.appendChild(fe),be.addEventListener("click",(function e(){be.removeEventListener("click",e),Be.textContent="";const n=document.createElement("div");n.classList.add("easyDifficulty"),n.textContent="NOVICE",Be.appendChild(n);const t=document.createElement("div");let a;t.classList.add("hardDifficulty"),t.textContent="EXPERT",Be.appendChild(t),n.addEventListener("click",a=()=>{n.removeEventListener("click",a),document.querySelector("body").textContent="",ce("singlePlayer","novice",0)}),t.addEventListener("click",a=()=>{t.removeEventListener("click",a),document.querySelector("body").textContent="",ce("singlePlayer","expert",0)})})),fe.addEventListener("click",(function e(){fe.removeEventListener("click",e),Be.textContent="";const n=document.createElement("div");n.classList.add("player1NameContainer"),Be.appendChild(n);const t=document.createElement("div");t.classList.add("player2NameContainer"),Be.appendChild(t);const a=document.createElement("div");a.textContent="Player 1 Name",n.appendChild(a);const r=document.createElement("input");r.classList.add("inputPlayer1Name"),n.appendChild(r);const o=document.createElement("div");o.textContent="Player 2 Name",t.appendChild(o);const i=document.createElement("input");i.classList.add("inputPlayer2Name"),t.appendChild(i);const l=document.createElement("div");l.classList.add("playMultiplayerButton"),l.textContent="PLAY",me.appendChild(l),l.addEventListener("click",Ce)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,