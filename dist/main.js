(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>b});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),l=t(667),s=t.n(l),c=new URL(t(435),t.b),d=new URL(t(404),t.b),p=new URL(t(266),t.b),A=new URL(t(892),t.b),h=new URL(t(541),t.b),u=i()(a()),m=s()(c),g=s()(d),y=s()(p),f=s()(A),C=s()(h);u.push([e.id,"*{\n    padding: 0px;\n    margin: 0px;\n    user-select: none;\n    box-sizing: border-box;\n    font-family: ubuntu;\n}\n@font-face {\n    font-family: Ubuntu;\n    src: url("+m+");\n}\n\nP{\n    margin: 0px;\n    padding: 0px;\n}\n\nbody{\n    height: 100vh;\n    width: 100vw;\n    background: rgba(47, 143, 190, 0.10);\n    touch-action: manipulation;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* main area section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n.startingMenu{\n    height: 100%;\n    width: 100%;\n    gap: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.gamePhase{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n    gap: 15px;\n}\n\n.gamePhase.preStage{\n    justify-content: flex-start !important;\n    gap: 15px;\n}\n\n.battleshipLogo{\n    max-height: 10%;\n}\n\n.battleshipImage{\n    max-height: 20%;\n    margin-top: -20px;\n}\n\n.optionsContainer{\n    display: flex;\n    gap: 15px;\n    max-height: 20%;\n}\n\n.playAgainstPlayer,\n.playAgainstBot,\n.easyDifficulty,\n.hardDifficulty,\n.playMultiplayerButton,\n.deployButton{\n    border: 1px black solid;\n    padding: 8px 15px 8px 15px;\n    cursor: pointer;\n    border-radius: 2px;\n    font-weight: 600;\n}\n\n.playAgainstPlayer:hover,\n.playAgainstBot:hover,\n.easyDifficulty:hover,\n.hardDifficulty:hover,\n.playMultiplayerButton:hover,\n.deployButton:hover{\n    background-color: rgb(0, 0, 0);\n    color: white;\n}\n\n.player1NameContainer,\n.player2NameContainer{\n    display: flex;\n    flex-direction: column;\n    font-weight: 600;\n    gap: 8px;\n    position: relative;\n}\n\n.player1NameContainer > div:nth-child(1),\n.player2NameContainer > div:nth-child(1){\n    text-align: center;\n}\n\n.player1NameContainer > input:nth-child(2),\n.player2NameContainer > input:nth-child(2){\n    border-top: none;\n    border-left: none;\n    border-right: none;\n    background-color: transparent;\n    width: 150px;\n    text-align: center;\n}\n\n.player1NameContainer > input:nth-child(2):focus,\n.player2NameContainer > input:nth-child(2):focus{\n    outline: none;\n}\n\n.playMultiplayerButton{\n    margin-top: 15px;\n}\n\n.errorMessage{\n    color: red;\n    font-weight: 500;\n    position: absolute;\n    bottom: -17px;\n    font-size: 11px;\n    text-align: center;\n    width: 100%;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* Player Area Section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n.playerArea{\n    width: 70%;\n    max-width: 440px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative;\n    height: 40%;\n    min-height: 420px;\n    gap: 15px;\n}\n\n.playerBoard{\n    width: 100%;\n    height: 100%;\n    position: relative;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n    cursor: crosshair;\n    border-radius: 10px;\n    box-shadow: 0px 2px 1px 2px rgba(0, 0, 0, 0.13);\n}\n\n.playerArea:nth-of-type(2)> .playerBoard{\n    box-shadow: 0px -2px 1px 2px rgba(0, 0, 0, 0.13);\n}\n\n.square{\n    border: 1px rgba(30, 30, 30, 0.7) solid;\n    box-shadow: 0px 1px 0px 1px rgba(0, 0, 0, 0.13);\n}\n\n/* Putting border-radius on gamephase board corners */\n.topLeft{\n    border-top-left-radius: 10px;\n}\n\n.topRight{\n    border-top-right-radius: 10px;\n}\n\n.bottomLeft{\n    border-bottom-left-radius: 10px;\n}\n\n.bottomRight{\n    border-bottom-right-radius: 10px;\n}\n\n.square.active{\n    background-color: rgb(81, 110, 153);\n}\n\n.fakeBoard{\n    height: 100%;\n    position: absolute;\n    width: 100%;\n    pointer-events: none;\n    border-radius: 10px;\n    overflow: hidden;\n}\n\n.playerIdentification0,\n.playerIdentification1{\n    position: absolute;\n    width: 100%;\n    display: flex;\n    font-size: 16px;\n    justify-content: space-evenly;\n    align-items: center;\n    font-weight: 700;\n    color: rgb(51, 51, 51);\n}\n\n.playerIdentification0{\n    bottom: -30px;\n}\n\n.playerIdentification1{\n    top: -30px;\n}\n\n.playerName{\n    width: 60px;\n    max-width: 60px;\n}\n\n.battleshipPreview0,\n.carrierPreview0,\n.submarinePreview0,\n.cruiserPreview0,\n.smallshipPreview0,\n.battleshipPreview1,\n.carrierPreview1,\n.submarinePreview1,\n.cruiserPreview1,\n.smallshipPreview1{\n    display: flex;\n    border: 1px rgb(120, 120, 120) solid;\n}\n\n.battleshipPreview0 > div,\n.carrierPreview0 > div,\n.submarinePreview0 > div,\n.cruiserPreview0 > div,\n.smallshipPreview0 > div{\n    border-right: 1px rgb(120, 120, 120) solid;\n    width: 10px;\n    height: 10px;\n    box-shadow: 0px -2px 0px 0px rgba(0, 0, 0, 0.39);\n}\n\n.battleshipPreview1 > div,\n.carrierPreview1 > div,\n.submarinePreview1 > div,\n.cruiserPreview1 > div,\n.smallshipPreview1 > div{\n    border-right: 1px black solid;\n    width: 10px;\n    height: 10px;\n    box-shadow: 0px 2px 0px 0px rgba(0, 0, 0, 0.39);\n}\n\n.battleshipPreview0 > div:last-child,\n.carrierPreview0 > div:last-child,\n.submarinePreview0 > div:last-child,\n.cruiserPreview0 > div:last-child,\n.smallshipPreview0 > div:last-child,\n.battleshipPreview1 > div:last-child,\n.carrierPreview1 > div:last-child,\n.submarinePreview1 > div:last-child,\n.cruiserPreview1 > div:last-child,\n.smallshipPreview1 > div:last-child{\n    border-right: none\n}\n\n.message{\n    font-size: 16px;\n    font-style: italic;\n    width: max-content;\n}\n\n.rotateButton{\n    border-radius: 10%;\n    padding: 5px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    content: ' ';\n    height: 40px;\n    width: 40px;\n}\n\n.rotateButton.makeHorizontal{\n    background-image: url("+g+");\n    background-size: cover;\n    background-position: center;\n}\n\n.rotateButton.makeVertical{\n    background-image: url("+y+");\n    background-size: cover;\n    background-position: center;\n}\n\n.shot{\n    background-image: url("+f+");\n    background-position: center;\n    background-color: initial;\n    background-size: cover;\n    transition: all 1s ease;\n}\n\n.shot.shipHit{\n    background-image: url("+C+");\n    background-position: center;\n    background-size: cover;\n    transition: all 1s ease;\n}\n\n.shot.shipHit.shipSunk{\n    background-color: rgba(255, 0, 0, 0.671);\n    background-image: none;\n    transition: all 1s ease;\n}\n\n.playerBoard .shot.shipHit.shipSunk.horizontalCarrier:nth-child(1){\n    border: 10px black solid;\n}\n\n.fakeBoard > img{\n    background: rgb(36, 36, 36);\n    border: 1px rgba(255, 255, 255, 0.329) solid;\n}\n\n@media screen and (max-width: 600px){\n    .gamePhase{\n        max-height: 100vh;\n    }\n\n    .playerArea{\n        height: auto;\n        min-height: 40%;\n        gap: 10px;\n    }\n\n    .playerBoard{\n        width: 100%;\n        height: 100%;\n        min-width: 340px;\n        max-width: 95%;\n        min-height: 280px;\n        max-height: 400px;\n    }\n\n    .playerIdentification0{\n        bottom: -25px;\n        font-size: 15px;\n    }\n\n    .message{\n        font-size: 15px;\n        text-align: center;\n    }\n\n    .playerIdentification1{\n        top: -25px;\n        font-size: 15px;\n    }\n}\n\n@media screen and (min-height: 720px){\n    .gamePhase{\n        height: 100%;\n        justify-content: center !important;\n        gap: 40px;\n    }\n}\n\n@media screen and (max-height: 800px) and (min-height: 720px){\n    .gamePhase{\n        height: 100%;\n        justify-content: center !important;\n    }\n\n    .playerArea{\n        min-height: 35%;\n        gap: 10px;\n    }\n\n    .playerBoard{\n        width: 80%;\n        height: 100%;\n        max-width: 95%;\n        max-height: 400px;\n    }\n\n    .playerIdentification0{\n        bottom: -25px;\n        font-size: 15px;\n    }\n\n    .message{\n        font-size: 15px;\n        text-align: center;\n    }\n\n    .playerIdentification1{\n        top: -25px;\n        font-size: 15px;\n    }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["*{\n    padding: 0px;\n    margin: 0px;\n    user-select: none;\n    box-sizing: border-box;\n    font-family: ubuntu;\n}\n@font-face {\n    font-family: Ubuntu;\n    src: url('/src/assets/fonts/Ubuntu-Regular.ttf');\n}\n\nP{\n    margin: 0px;\n    padding: 0px;\n}\n\nbody{\n    height: 100vh;\n    width: 100vw;\n    background: rgba(47, 143, 190, 0.10);\n    touch-action: manipulation;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* main area section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n.startingMenu{\n    height: 100%;\n    width: 100%;\n    gap: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.gamePhase{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n    gap: 15px;\n}\n\n.gamePhase.preStage{\n    justify-content: flex-start !important;\n    gap: 15px;\n}\n\n.battleshipLogo{\n    max-height: 10%;\n}\n\n.battleshipImage{\n    max-height: 20%;\n    margin-top: -20px;\n}\n\n.optionsContainer{\n    display: flex;\n    gap: 15px;\n    max-height: 20%;\n}\n\n.playAgainstPlayer,\n.playAgainstBot,\n.easyDifficulty,\n.hardDifficulty,\n.playMultiplayerButton,\n.deployButton{\n    border: 1px black solid;\n    padding: 8px 15px 8px 15px;\n    cursor: pointer;\n    border-radius: 2px;\n    font-weight: 600;\n}\n\n.playAgainstPlayer:hover,\n.playAgainstBot:hover,\n.easyDifficulty:hover,\n.hardDifficulty:hover,\n.playMultiplayerButton:hover,\n.deployButton:hover{\n    background-color: rgb(0, 0, 0);\n    color: white;\n}\n\n.player1NameContainer,\n.player2NameContainer{\n    display: flex;\n    flex-direction: column;\n    font-weight: 600;\n    gap: 8px;\n    position: relative;\n}\n\n.player1NameContainer > div:nth-child(1),\n.player2NameContainer > div:nth-child(1){\n    text-align: center;\n}\n\n.player1NameContainer > input:nth-child(2),\n.player2NameContainer > input:nth-child(2){\n    border-top: none;\n    border-left: none;\n    border-right: none;\n    background-color: transparent;\n    width: 150px;\n    text-align: center;\n}\n\n.player1NameContainer > input:nth-child(2):focus,\n.player2NameContainer > input:nth-child(2):focus{\n    outline: none;\n}\n\n.playMultiplayerButton{\n    margin-top: 15px;\n}\n\n.errorMessage{\n    color: red;\n    font-weight: 500;\n    position: absolute;\n    bottom: -17px;\n    font-size: 11px;\n    text-align: center;\n    width: 100%;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* Player Area Section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n.playerArea{\n    width: 70%;\n    max-width: 440px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative;\n    height: 40%;\n    min-height: 420px;\n    gap: 15px;\n}\n\n.playerBoard{\n    width: 100%;\n    height: 100%;\n    position: relative;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n    cursor: crosshair;\n    border-radius: 10px;\n    box-shadow: 0px 2px 1px 2px rgba(0, 0, 0, 0.13);\n}\n\n.playerArea:nth-of-type(2)> .playerBoard{\n    box-shadow: 0px -2px 1px 2px rgba(0, 0, 0, 0.13);\n}\n\n.square{\n    border: 1px rgba(30, 30, 30, 0.7) solid;\n    box-shadow: 0px 1px 0px 1px rgba(0, 0, 0, 0.13);\n}\n\n/* Putting border-radius on gamephase board corners */\n.topLeft{\n    border-top-left-radius: 10px;\n}\n\n.topRight{\n    border-top-right-radius: 10px;\n}\n\n.bottomLeft{\n    border-bottom-left-radius: 10px;\n}\n\n.bottomRight{\n    border-bottom-right-radius: 10px;\n}\n\n.square.active{\n    background-color: rgb(81, 110, 153);\n}\n\n.fakeBoard{\n    height: 100%;\n    position: absolute;\n    width: 100%;\n    pointer-events: none;\n    border-radius: 10px;\n    overflow: hidden;\n}\n\n.playerIdentification0,\n.playerIdentification1{\n    position: absolute;\n    width: 100%;\n    display: flex;\n    font-size: 16px;\n    justify-content: space-evenly;\n    align-items: center;\n    font-weight: 700;\n    color: rgb(51, 51, 51);\n}\n\n.playerIdentification0{\n    bottom: -30px;\n}\n\n.playerIdentification1{\n    top: -30px;\n}\n\n.playerName{\n    width: 60px;\n    max-width: 60px;\n}\n\n.battleshipPreview0,\n.carrierPreview0,\n.submarinePreview0,\n.cruiserPreview0,\n.smallshipPreview0,\n.battleshipPreview1,\n.carrierPreview1,\n.submarinePreview1,\n.cruiserPreview1,\n.smallshipPreview1{\n    display: flex;\n    border: 1px rgb(120, 120, 120) solid;\n}\n\n.battleshipPreview0 > div,\n.carrierPreview0 > div,\n.submarinePreview0 > div,\n.cruiserPreview0 > div,\n.smallshipPreview0 > div{\n    border-right: 1px rgb(120, 120, 120) solid;\n    width: 10px;\n    height: 10px;\n    box-shadow: 0px -2px 0px 0px rgba(0, 0, 0, 0.39);\n}\n\n.battleshipPreview1 > div,\n.carrierPreview1 > div,\n.submarinePreview1 > div,\n.cruiserPreview1 > div,\n.smallshipPreview1 > div{\n    border-right: 1px black solid;\n    width: 10px;\n    height: 10px;\n    box-shadow: 0px 2px 0px 0px rgba(0, 0, 0, 0.39);\n}\n\n.battleshipPreview0 > div:last-child,\n.carrierPreview0 > div:last-child,\n.submarinePreview0 > div:last-child,\n.cruiserPreview0 > div:last-child,\n.smallshipPreview0 > div:last-child,\n.battleshipPreview1 > div:last-child,\n.carrierPreview1 > div:last-child,\n.submarinePreview1 > div:last-child,\n.cruiserPreview1 > div:last-child,\n.smallshipPreview1 > div:last-child{\n    border-right: none\n}\n\n.message{\n    font-size: 16px;\n    font-style: italic;\n    width: max-content;\n}\n\n.rotateButton{\n    border-radius: 10%;\n    padding: 5px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    content: ' ';\n    height: 40px;\n    width: 40px;\n}\n\n.rotateButton.makeHorizontal{\n    background-image: url('./assets/makeVertical.png');\n    background-size: cover;\n    background-position: center;\n}\n\n.rotateButton.makeVertical{\n    background-image: url('./assets/makeHorizontal.png');\n    background-size: cover;\n    background-position: center;\n}\n\n.shot{\n    background-image: url('./assets/missIcon.png');\n    background-position: center;\n    background-color: initial;\n    background-size: cover;\n    transition: all 1s ease;\n}\n\n.shot.shipHit{\n    background-image: url('./assets/targetIcon.png');\n    background-position: center;\n    background-size: cover;\n    transition: all 1s ease;\n}\n\n.shot.shipHit.shipSunk{\n    background-color: rgba(255, 0, 0, 0.671);\n    background-image: none;\n    transition: all 1s ease;\n}\n\n.playerBoard .shot.shipHit.shipSunk.horizontalCarrier:nth-child(1){\n    border: 10px black solid;\n}\n\n.fakeBoard > img{\n    background: rgb(36, 36, 36);\n    border: 1px rgba(255, 255, 255, 0.329) solid;\n}\n\n@media screen and (max-width: 600px){\n    .gamePhase{\n        max-height: 100vh;\n    }\n\n    .playerArea{\n        height: auto;\n        min-height: 40%;\n        gap: 10px;\n    }\n\n    .playerBoard{\n        width: 100%;\n        height: 100%;\n        min-width: 340px;\n        max-width: 95%;\n        min-height: 280px;\n        max-height: 400px;\n    }\n\n    .playerIdentification0{\n        bottom: -25px;\n        font-size: 15px;\n    }\n\n    .message{\n        font-size: 15px;\n        text-align: center;\n    }\n\n    .playerIdentification1{\n        top: -25px;\n        font-size: 15px;\n    }\n}\n\n@media screen and (min-height: 720px){\n    .gamePhase{\n        height: 100%;\n        justify-content: center !important;\n        gap: 40px;\n    }\n}\n\n@media screen and (max-height: 800px) and (min-height: 720px){\n    .gamePhase{\n        height: 100%;\n        justify-content: center !important;\n    }\n\n    .playerArea{\n        min-height: 35%;\n        gap: 10px;\n    }\n\n    .playerBoard{\n        width: 80%;\n        height: 100%;\n        max-width: 95%;\n        max-height: 400px;\n    }\n\n    .playerIdentification0{\n        bottom: -25px;\n        font-size: 15px;\n    }\n\n    .message{\n        font-size: 15px;\n        text-align: center;\n    }\n\n    .playerIdentification1{\n        top: -25px;\n        font-size: 15px;\n    }\n}"],sourceRoot:""}]);const b=u},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(i[s]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);r&&i[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),n.push(d))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],l=0;l<e.length;l++){var s=e[l],c=r.base?s[0]+r.base:s[0],d=o[c]||0,p="".concat(c," ").concat(d);o[c]=d+1;var A=t(p),h={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)n[A].references++,n[A].updater(h);else{var u=a(h,r);r.byIndex=l,n.splice(l,0,{identifier:p,updater:u,references:1})}i.push(p)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var l=t(o[i]);n[l].references--}for(var s=r(e,a),c=0;c<o.length;c++){var d=t(o[c]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}o=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},207:(e,n,t)=>{e.exports=t.p+"8a740991c74261e6fd56.png"},886:(e,n,t)=>{e.exports=t.p+"4be3df741b793215f8cb.png"},435:(e,n,t)=>{e.exports=t.p+"1cbb1b79a23478cc89ad.ttf"},266:(e,n,t)=>{e.exports=t.p+"980b543822a1bf762052.png"},404:(e,n,t)=>{e.exports=t.p+"886d1ad38da31defe057.png"},892:(e,n,t)=>{e.exports=t.p+"155e56395d01abed0f88.png"},541:(e,n,t)=>{e.exports=t.p+"321a573e4328febfcba0.png"},244:(e,n,t)=>{e.exports=t.p+"be44c07688751c771a5d.svg"},856:(e,n,t)=>{e.exports=t.p+"f828ab720c08a29d587d.svg"},657:(e,n,t)=>{e.exports=t.p+"474c5c901a111a4fd96c.svg"},408:(e,n,t)=>{e.exports=t.p+"acae28ca9bc350fd8992.svg"},201:(e,n,t)=>{e.exports=t.p+"e4e8e6fa39a9a6e3fc2f.svg"},552:(e,n,t)=>{e.exports=t.p+"2c0fc992ec11b2e3063c.svg"},783:(e,n,t)=>{e.exports=t.p+"1bf5d5a77167315847e6.svg"},481:(e,n,t)=>{e.exports=t.p+"adb0471b7652f04b20bc.svg"},665:(e,n,t)=>{e.exports=t.p+"8b175fe4df656a0305e4.svg"},156:(e,n,t)=>{e.exports=t.p+"92c453c6dced7a0f6272.svg"}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(569),i=t.n(o),l=t(565),s=t.n(l),c=t(216),d=t.n(c),p=t(589),A=t.n(p),h=t(426),u={};u.styleTagTransform=A(),u.setAttributes=s(),u.insert=i().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=d(),n()(h.Z,u),h.Z&&h.Z.locals&&h.Z.locals;var m=t(886),g=t(207),y=t(244),f=t(856),C=t(657),b=t(408),v=t(201),x=t(552),B=t(783),I=t(481),w=t(665),S=t(156);let k,E,P,L,q,M=[];function D(e,n){this.name=e,this.length=n,this.message="place your "+this.name.substring(0,this.name.length)+` (${this.length} ${1===this.length?"square":"squares"})`}function N(e,n){P=0,M[0]=new D("Battleship",5),M[1]=new D("Carrier",4),M[2]=new D("Submarine",3),M[3]=new D("Submarine",3),M[4]=new D("Cruiser",2),M[5]=new D("Cruiser",2),M[6]=new D("Cruiser",2),M[7]=new D("Smallship",1),M[8]=new D("Smallship",1),M[9]=new D("Smallship",1);let t=document.querySelector(".playerBoard");document.querySelector(".rotateButton").addEventListener("click",Y),t.addEventListener("mouseout",Q),z(e,n)}function z(e,n){document.querySelector(".message").textContent="singlePlayer"===e.mode?`Player, ${M[P].message}`:(0===n?ie:le)+", "+M[P].message;let t=document.querySelector(".playerBoard");t.addEventListener("mouseover",k=n=>function(e,n){let t=Array.from(document.querySelectorAll(".active"));for(let e=0;e<t.length;e++)t[e].classList.remove("active");for(let t=0;t<10;t++)for(let r=0;r<10;r++)if(e.target===n.board[t][r].dom){if(document.querySelector(".rotateButton").classList.contains("makeHorizontal"))for(let e=0;e<M[P].length;e++)r+e>9||n.board[t][r+e].dom.classList.toggle("active");if(document.querySelector(".rotateButton").classList.contains("makeVertical"))for(let e=0;e<M[P].length;e++)t+e>9||n.board[t+e][r].dom.classList.toggle("active")}}(n,e)),t.addEventListener("click",E=t=>function(e,n,t){let r,a=document.querySelector(".playerBoard");a.removeEventListener("click",E),a.removeEventListener("mouseover",k),e.target.classList.contains("square")?(r=document.querySelector(".rotateButton").classList.contains("makeHorizontal")?"horizontal":"vertical",!0===function(e,n,t,r,a,o){try{return e.placeShip(n,t,a,o,r),!0}catch(e){return!1}}(n,e.target.location.y,e.target.location.x,r,M[P].name,M[P].length)?(function(e,n){let t=[];if(null===document.querySelector(".fakeBoard")){let e=document.createElement("div");e.textContent="",e.classList.add("fakeBoard"),document.querySelector(".playerBoard").appendChild(e)}let r=document.querySelector(".square").getClientRects()[0];t[n]=document.createElement("img"),"Battleship"===e.allShips[n].name?"horizontal"===e.allShips[n].axis?(t[n].src=y,t[n].style.height=`${r.height}px`,t[n].style.width=5*r.width+"px"):(t[n].src=f,t[n].style.height=5*r.height+"px",t[n].style.width=`${r.width}px`):"Carrier"===e.allShips[n].name?"horizontal"===e.allShips[n].axis?(t[n].src=C,t[n].style.height=`${r.height}px`,t[n].style.width=4*r.width+"px"):(t[n].src=b,t[n].style.height=4*r.height+"px",t[n].style.width=`${r.width}px`):"Submarine"===e.allShips[n].name?"horizontal"===e.allShips[n].axis?(t[n].src=w,t[n].style.height=`${r.height}px`,t[n].style.width=3*r.width+"px"):(t[n].src=S,t[n].style.height=3*r.height+"px",t[n].style.width=`${r.width}px`):"Cruiser"===e.allShips[n].name?"horizontal"===e.allShips[n].axis?(t[n].src=v,t[n].style.height=`${r.height}px`,t[n].style.width=2*r.width+"px"):(t[n].src=x,t[n].style.height=2*r.height+"px",t[n].style.width=`${r.width}px`):"Smallship"===e.allShips[n].name&&("horizontal"===e.allShips[n].axis?t[n].src=B:t[n].src=I,t[n].style.height=`${r.height}px`,t[n].style.width=`${r.width}px`),document.querySelector(".fakeBoard").appendChild(t[n]),t[n].style.position="absolute",t[n].style.left=10*e.allShips[n].placedAt.x+"%",t[n].style.top=10*e.allShips[n].placedAt.y+"%"}(n,P),P++,P===M.length?0===t?(T(),document.querySelector(".message").textContent="All ships have been placed. You may now deploy.",document.querySelector(".deployButton").addEventListener("click",pe)):1===t&&(T(),document.querySelector(".message").textContent="All ships have been placed. You may now deploy.",document.querySelector(".deployButton").addEventListener("click",Ae)):z(n,t)):z(n,t)):z(n,t)}(t,e,n))}function Y(){document.querySelector(".rotateButton").classList.toggle("makeVertical"),document.querySelector(".rotateButton").classList.toggle("makeHorizontal")}function Q(){let e=Array.from(document.querySelectorAll(".active"));for(let n=0;n<e.length;n++)e[n].classList.remove("active")}function T(){let e=document.createElement("div");e.classList.add("deployButton"),document.querySelector(".gamePhase").appendChild(e),e.textContent="DEPLOY"}function U(e){R(e),j(e),W(e),W(e),Z(e),Z(e),Z(e),H(e),H(e),H(e)}function R(e){q=Math.floor(2*Math.random()),L=0===q?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Battleship",5,L)}catch(n){R(e)}}function j(e){q=Math.floor(2*Math.random()),L=0===q?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Carrier",4,L)}catch(n){j(e)}}function W(e){q=Math.floor(2*Math.random()),L=0===q?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Submarine",3,L)}catch(n){W(e)}}function Z(e){q=Math.floor(2*Math.random()),L=0===q?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Cruiser",2,L)}catch(n){Z(e)}}function H(e){q=Math.floor(2*Math.random()),L=0===q?"horizontal":"vertical";try{e.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),"Smallship",1,L)}catch(n){H(e)}}function $(e,n){const t=document.querySelector(".gamePhase");t.style.justifyContent="space-around";let r=document.createElement("div");if(r.classList.add("playerArea"),t.appendChild(r),0===n){let e=document.querySelector(".message"),n=document.createElement("div");e.appendChild(n);let r=document.createElement("div");e.appendChild(r),e.textContent="",e.classList.add("message"),t.appendChild(e),document.querySelector(".playerArea").remove(),document.querySelector(".battleshipLogo").remove()}let a=document.createElement("div");a.classList.add("playerBoard"),r.appendChild(a);for(let n=0;n<10;n++)for(let t=0;t<10;t++)a.appendChild(e.playerBoard.board[n][t].dom),!0===e.playerBoard.board[n][t].hasShip&&(e.playerBoard.board[n][t].dom.classList.add("active"),e.playerBoard.board[n][t].dom.classList.add(`${e.playerBoard.board[n][t].ship.axis}${e.playerBoard.board[n][t].ship.name}`))}function G(e){!0===e[0].player.winner?document.querySelector(".message").textContent=e[0].player.name+" has won the game!":document.querySelector(".message").textContent=e[1].player.name+" has won the game!"}function V(e){let n=e.playerBoard.chronologicalGeneralDamage[e.playerBoard.chronologicalGeneralDamage.length-1].y,t=e.playerBoard.chronologicalGeneralDamage[e.playerBoard.chronologicalGeneralDamage.length-1].x;if(e.playerBoard.board[n][t].dom.classList.add("shot"),e.playerBoard.board[n][t].hasShip){let n=e.playerBoard.chronologicalGeneralDamage[e.playerBoard.chronologicalGeneralDamage.length-1].y,t=e.playerBoard.chronologicalGeneralDamage[e.playerBoard.chronologicalGeneralDamage.length-1].x;e.playerBoard.board[n][t].dom.classList.add("shipHit")}for(let n=0;n<e.playerBoard.allShips.length;n++)if(!0===e.playerBoard.allShips[n].isSunk()){let t=e.playerBoard.allShips[n].placedAt.y,r=e.playerBoard.allShips[n].placedAt.x;if(!e.playerBoard.board[t][r].dom.classList.contains("shipSunk"))if("vertical"===e.playerBoard.allShips[n].axis)for(let a=0;a<e.playerBoard.allShips[n].length;a++)e.playerBoard.board[t+a][r].dom.classList.add("shipSunk");else for(let a=0;a<e.playerBoard.allShips[n].length;a++)e.playerBoard.board[t][r+a].dom.classList.add("shipSunk")}!function(e){let n=e.playerBoard.allShips;if(Array.from(document.querySelectorAll(".playerName"))[0].textContent===e.player.name)for(let e=0;e<n.length;e++){let t=n[e].length-n[e].remainingLength;"Battleship"===n[e].name&&Array.from(document.querySelector(".battleshipPreview0").children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),"Carrier"===n[e].name&&Array.from(document.querySelector(".carrierPreview0").children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),"Submarine"===n[e].name&&(2===e&&Array.from(Array.from(document.querySelectorAll(".submarinePreview0"))[0].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),3===e&&Array.from(Array.from(document.querySelectorAll(".submarinePreview0"))[1].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"}))),"Cruiser"===n[e].name&&(4===e&&Array.from(Array.from(document.querySelectorAll(".cruiserPreview0"))[0].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),5===e&&Array.from(Array.from(document.querySelectorAll(".cruiserPreview0"))[1].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),6===e&&Array.from(Array.from(document.querySelectorAll(".cruiserPreview0"))[2].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"}))),"Smallship"===n[e].name&&(7===e&&Array.from(Array.from(document.querySelectorAll(".smallshipPreview0"))[0].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),8===e&&Array.from(Array.from(document.querySelectorAll(".smallshipPreview0"))[1].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),9===e&&Array.from(Array.from(document.querySelectorAll(".smallshipPreview0"))[2].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})))}if(Array.from(document.querySelectorAll(".playerName"))[1].textContent===e.player.name)for(let e=0;e<n.length;e++){let t=n[e].length-n[e].remainingLength;"Battleship"===n[e].name&&Array.from(document.querySelector(".battleshipPreview1").children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),"Carrier"===n[e].name&&Array.from(document.querySelector(".carrierPreview1").children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),"Submarine"===n[e].name&&(2===e&&Array.from(Array.from(document.querySelectorAll(".submarinePreview1"))[0].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),3===e&&Array.from(Array.from(document.querySelectorAll(".submarinePreview1"))[1].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"}))),"Cruiser"===n[e].name&&(4===e&&Array.from(Array.from(document.querySelectorAll(".cruiserPreview1"))[0].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),5===e&&Array.from(Array.from(document.querySelectorAll(".cruiserPreview1"))[1].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),6===e&&Array.from(Array.from(document.querySelectorAll(".cruiserPreview1"))[2].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"}))),"Smallship"===n[e].name&&(7===e&&Array.from(Array.from(document.querySelectorAll(".smallshipPreview1"))[0].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),8===e&&Array.from(Array.from(document.querySelectorAll(".smallshipPreview1"))[1].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})),9===e&&Array.from(Array.from(document.querySelectorAll(".smallshipPreview1"))[2].children).slice(0,t).forEach((e=>{e.style="background-color: rgba(255, 0, 0, 0.671)"})))}}(e)}let X=0,O={};function J(){document.querySelector(".message").textContent=ce[0].player.name+" It's your turn to attack! Pick a location to shoot at.",_()}function _(){"singlePlayer"===ce[0].playerBoard.mode?0===X&&(document.querySelector(".message").textContent="It's your turn to attack!",X++):document.querySelector(".message").textContent=ce[0].player.name+", it's your turn to attack.",document.querySelectorAll(".playerBoard")[1].addEventListener("click",F)}function F(e){let n=!1;for(let t=0;t<10;t++)for(let r=0;r<10;r++)if(ce[1].playerBoard.board[t][r].dom===e.target){document.querySelectorAll(".playerBoard")[1].removeEventListener("click",F);try{ce[0].player.attack(t,r,ce[1].playerBoard)}catch{n=!0,document.querySelector(".message").textContent="Invalid shot. Pick another location.",setTimeout(_,1250)}n||(V(ce[1]),setTimeout(ne,0,ce[0],ce[1],t,r),!0===ce[1].playerBoard.allShipsDestroyed?(ce[0].player.winner=!0,setTimeout(G,0,ce)):setTimeout(K,1250))}}function K(){if("singlePlayer"===ce[0].playerBoard.mode){try{ce[1].player.attack(0,0,ce[0].playerBoard)}catch{K()}O.y=ce[0].playerBoard.chronologicalGeneralDamage[ce[0].playerBoard.chronologicalGeneralDamage.length-1].y,O.x=ce[0].playerBoard.chronologicalGeneralDamage[ce[0].playerBoard.chronologicalGeneralDamage.length-1].x,setTimeout(ne,0,ce[1],ce[0],O.y,O.x),V(ce[0]),!0===ce[0].playerBoard.allShipsDestroyed?(ce[1].player.winner=!0,setTimeout(G,0,ce)):setTimeout(_,1250)}else document.querySelector(".message").textContent=ce[1].player.name+", it's your turn to attack.",document.querySelectorAll(".playerBoard")[0].addEventListener("click",ee)}function ee(e){let n=!1;for(let t=0;t<10;t++)for(let r=0;r<10;r++)if(ce[0].playerBoard.board[t][r].dom===e.target){document.querySelectorAll(".playerBoard")[0].removeEventListener("click",ee);try{ce[1].player.attack(t,r,ce[0].playerBoard)}catch{n=!0,document.querySelector(".message").textContent="Invalid shot. Pick another location.",setTimeout(K,1250)}n||(V(ce[0]),setTimeout(ne,0,ce[1],ce[0],t,r),!0===ce[0].playerBoard.allShipsDestroyed?(ce[1].player.winner=!0,setTimeout(G,0,ce)):setTimeout(_,1250))}}function ne(e,n,t,r){!0===n.playerBoard.board[t][r].hasShip?"bot"===e.player.name?document.querySelector(".message").textContent="The bot has shot.. and they hit your "+te(n.playerBoard.board[t][r].ship.name)+"!":"bot"===n.player.name?document.querySelector(".message").textContent="You shoot.. and managed to hit the bot's "+te(n.playerBoard.board[t][r].ship.name)+"!":"bot"!==e.player.name&&(document.querySelector(".message").textContent=e.player.name+" has shot.. and they hit "+n.player.name+"'s "+te(n.playerBoard.board[t][r].ship.name)+"!"):"bot"===e.player.name?document.querySelector(".message").textContent="The bot has shot.. and they missed.":"bot"===n.player.name?document.querySelector(".message").textContent="You shoot.. and you hit nothing.":"bot"!==e.player.name&&(document.querySelector(".message").textContent=e.player.name+" has shot.. and they hit nothing.")}function te(e){return e.charAt(0).toLowerCase()+e.slice(1)}class re{constructor(e,n,t){this.name=e,this.length=n,this.remainingLength=n,this.axis=t,this.hit=function(){this.remainingLength--},this.isSunk=function(){return 0===this.remainingLength}}}class ae{constructor(){this.board=[],this.allShips=[],this.allShipsDestroyed,this.chronologicalGeneralDamage=[],this.chronologicalShipDamage=[]}init(){for(let e=0;e<10;e++){this.board[e]=[];for(let n=0;n<10;n++)this.board[e][n]={hasShip:!1,isShot:!1}}}placeShip(e,n,t,r,a){if("horizontal"===a){for(let t=0;t<r;t++)if(n+t>9||!0===this.board[e][n+t].hasShip)throw new Error("invalid horizontal position")}else for(let t=0;t<r;t++)if(e+t>9||!0===this.board[e+t][n].hasShip)throw new Error("invalid vertical position");if(this.allShips.push(new re(t,r,a)),this.allShips[this.allShips.length-1].placedAt={y:e,x:n},"horizontal"===a)for(let t=0;t<r;t++)this.board[e][n+t].hasShip=!0,this.board[e][n+t].ship=this.allShips[this.allShips.length-1];else for(let t=0;t<r;t++)this.board[e+t][n].hasShip=!0,this.board[e+t][n].ship=this.allShips[this.allShips.length-1]}receiveAttack(e,n){if(!0===this.board[e][n].isShot)throw new Error("invalid attacking location");this.chronologicalGeneralDamage.push({y:e,x:n}),this.board[e][n].isShot=!0,this.board[e][n].hasShip&&(this.chronologicalShipDamage.push({y:e,x:n}),this.board[e][n].ship.hit(),this.board[e][n].ship.isSunk(),this.checkShips())}checkShips(){let e=0;for(let n=0;n<this.allShips.length;n++)!0===this.allShips[n].isSunk()&&e++,e===this.allShips.length&&(this.allShipsDestroyed=!0)}}class oe extends ae{constructor(e,n){super(n),this.name=e,this.usedAttacks=[]}attack(e,n,t){if("Bot"===this.name){if("novice"===this.difficulty){let e=Math.floor(10*Math.random()),n=Math.floor(10*Math.random());t.receiveAttack(e,n)}else if("expert"===this.difficulty){let e=Math.random()<.5?-1:1;if(t.chronologicalShipDamage.length>0){let n=t.chronologicalShipDamage[t.chronologicalShipDamage.length-1],r=Math.random()<.5?n.y+e:n.y,a=r===n.y?n.x+e:n.x;if(a>=0||a<=9||r>=0||r>=9)if(t.board[r][a].isShot){let e=Math.floor(10*Math.random()),n=Math.floor(10*Math.random());t.receiveAttack(e,n)}else t.receiveAttack(r,a);else{console.log("will randomly attack");let e=Math.floor(10*Math.random()),n=Math.floor(10*Math.random());t.receiveAttack(e,n)}}else{let e=Math.floor(10*Math.random()),n=Math.floor(10*Math.random());t.receiveAttack(e,n)}}}else t.receiveAttack(e,n)}}let ie,le,se,ce=[];function de(e,n,t){let r,a;0===t&&"singlePlayer"!==e&&(ie=document.querySelector(".inputPlayer1Name").value,le=document.querySelector(".inputPlayer2Name").value,document.querySelector(".startingMenu").remove());let o=new ae;se=n,o.init(),"singlePlayer"===e?r=new oe("Human"):(a=0===t?ie:le,r=new oe(a)),ce[t]={player:r,playerBoard:o},"singlePlayer"===e&&(ce[0].playerBoard.mode="singlePlayer"),function(e){if(0===e){const e=document.createElement("div");e.classList.add("gamePhase"),document.body.appendChild(e);let n=document.createElement("img");n.classList.add("battleshipLogo"),n.src=m,e.appendChild(n)}const n=document.createElement("div");document.querySelector(".gamePhase").appendChild(n),n.classList.add("playerArea");const t=document.createElement("div");n.appendChild(t),t.classList.add("message");const r=document.createElement("div");n.appendChild(r),r.classList.add("rotateButton","makeVertical","makeHorizontal"),r.classList.toggle("makeVertical");const a=document.createElement("div");a.classList.add("playerBoard"),n.appendChild(a)}(t),function(e){let n=document.querySelector(".playerBoard");for(let t=0;t<10;t++)for(let r=0;r<10;r++)e[t][r].dom=document.createElement("div"),e[t][r].dom.classList.add("active"),e[t][r].dom.classList.add("square"),e[t][r].dom.classList.toggle("active"),e[t][r].dom.location={y:t,x:r},0===t&&(0===r&&e[t][r].dom.classList.add("topLeft"),9===r&&e[t][r].dom.classList.add("topRight")),9===t&&(0===r&&e[t][r].dom.classList.add("bottomLeft"),9===r&&e[t][r].dom.classList.add("bottomRight")),n.appendChild(e[t][r].dom)}(ce[t].playerBoard.board),N(ce[t].playerBoard,t),document.querySelector(".gamePhase").classList.add("preStage")}function pe(){document.querySelector(".gamePhase").classList.remove("preStage"),"singlePlayer"===ce[0].playerBoard.mode?(document.querySelector(".deployButton").removeEventListener("click",pe),document.querySelector(".deployButton").remove(),function(){let e=new ae;e.init();let n=new oe("Bot");n.difficulty=se,ce[1]={player:n,playerBoard:e},function(e){for(let n=0;n<10;n++)for(let t=0;t<10;t++)e.board[n][t].dom=document.createElement("div"),e.board[n][t].dom.classList.add("square"),0===n&&(0===t&&e.board[n][t].dom.classList.add("topLeft"),9===t&&e.board[n][t].dom.classList.add("topRight")),9===n&&(0===t&&e.board[n][t].dom.classList.add("bottomLeft"),9===t&&e.board[n][t].dom.classList.add("bottomRight"))}(ce[1].playerBoard),U(ce[1].playerBoard)}(),$(ce[0],0),$(ce[1],1),he(ce[0],0),he(ce[1],1),Q(),J()):(document.querySelector(".deployButton").removeEventListener("click",pe),document.querySelector(".playerArea").remove(),document.querySelector(".deployButton").remove(),de("multiPlayer","multi",1))}function Ae(){document.querySelector(".deployButton").removeEventListener("click",Ae),document.querySelector(".deployButton").remove(),$(ce[0],0),$(ce[1],1),he(ce[0],0),he(ce[1],1),Q(),J()}function he(e,n){const t=document.createElement("div");t.classList.add("playerIdentification"+n);const r=document.createElement("div");r.classList.add("playerName"),t.appendChild(r),r.textContent=e.player.name;const a=document.createElement("div");a.classList.add("battleshipPreview"+n),t.appendChild(a);let o=[];for(let e=0;e<5;e++)o[e]=document.createElement("div"),a.appendChild(o[e]);const i=document.createElement("div");i.classList.add("carrierPreview"+n),t.appendChild(i);let l=[];for(let e=0;e<4;e++)l[e]=document.createElement("div"),i.appendChild(l[e]);let s=[],c=[];for(let e=0;e<2;e++){s[e]=document.createElement("div"),s[e].classList.add("submarinePreview"+n),t.appendChild(s[e]);for(let n=0;n<3;n++)c[n]=document.createElement("div"),s[e].appendChild(c[n])}let d=[],p=[];for(let e=0;e<3;e++){d[e]=document.createElement("div"),d[e].classList.add("cruiserPreview"+n),t.appendChild(d[e]);for(let n=0;n<2;n++)p[n]=document.createElement("div"),d[e].appendChild(p[n])}let A=[],h=[];for(let e=0;e<3;e++)A[e]=document.createElement("div"),A[e].classList.add("smallshipPreview"+n),t.appendChild(A[e]),h[e]=document.createElement("div"),A[e].appendChild(h[e]);document.querySelectorAll(".playerBoard")[n].appendChild(t)}let ue=[];const me=document.createElement("div");me.classList.add("startingMenu"),document.body.appendChild(me);const ge=document.createElement("img");ge.classList.add("battleshipLogo"),ge.src=m,me.appendChild(ge);const ye=document.createElement("img");ye.classList.add("battleshipImage"),ye.src=g,me.appendChild(ye);const fe=document.createElement("div");fe.classList.add("optionsContainer"),me.appendChild(fe);const Ce=document.createElement("div");Ce.classList.add("playAgainstBot"),Ce.textContent="SINGLE PLAYER",fe.appendChild(Ce);const be=document.createElement("div");function ve(){ue=[];let e=document.querySelectorAll(".errorMessage");for(let n=0;n<e.length;n++)e[n].remove();""===document.querySelector(".inputPlayer1Name").value?(ue.push(document.createElement("div")),ue[ue.length-1].classList.add("errorMessage"),ue[ue.length-1].textContent="Can't be left empty",document.querySelector(".player1NameContainer").appendChild(ue[ue.length-1])):document.querySelector(".inputPlayer1Name").value.length>8?(ue.push(document.createElement("div")),ue[ue.length-1].classList.add("errorMessage"),ue[ue.length-1].textContent="Must be 8 chars. or less",document.querySelector(".player1NameContainer").appendChild(ue[ue.length-1])):"Human"===document.querySelector(".inputPlayer1Name").value||"Bot"===document.querySelector(".inputPlayer1Name").value?(ue.push(document.createElement("div")),ue[ue.length-1].classList.add("errorMessage"),ue[ue.length-1].textContent="Player 1 name is invalid",document.querySelector(".player1NameContainer").appendChild(ue[ue.length-1])):""===document.querySelector(".inputPlayer2Name").value?(ue.push(document.createElement("div")),ue[ue.length-1].classList.add("errorMessage"),ue[ue.length-1].textContent="Can't be left empty",document.querySelector(".player2NameContainer").appendChild(ue[ue.length-1])):"Human"===document.querySelector(".inputPlayer2Name").value||"Bot"===document.querySelector(".inputPlayer2Name").value?(ue.push(document.createElement("div")),ue[ue.length-1].classList.add("errorMessage"),ue[ue.length-1].textContent="Player 2 name is invalid",document.querySelector(".player2NameContainer").appendChild(ue[ue.length-1])):document.querySelector(".inputPlayer2Name").value.length>8?(ue.push(document.createElement("div")),ue[ue.length-1].classList.add("errorMessage"),ue[ue.length-1].textContent="Must be 8 chars. or less",document.querySelector(".player2NameContainer").appendChild(ue[ue.length-1])):(document.querySelector(".playMultiplayerButton").removeEventListener("click",ve),de("multiPlayer","multi",0,document.querySelector(".inputPlayer1Name").value,document.querySelector(".inputPlayer2Name").value))}be.classList.add("playAgainstPlayer"),be.textContent="MULTI PLAYER",fe.appendChild(be),Ce.addEventListener("click",(function e(){Ce.removeEventListener("click",e),fe.textContent="";const n=document.createElement("div");n.classList.add("easyDifficulty"),n.textContent="NOVICE",fe.appendChild(n);const t=document.createElement("div");let r;t.classList.add("hardDifficulty"),t.textContent="EXPERT",fe.appendChild(t),n.addEventListener("click",r=()=>{n.removeEventListener("click",r),document.querySelector("body").textContent="",de("singlePlayer","novice",0)}),t.addEventListener("click",r=()=>{t.removeEventListener("click",r),document.querySelector("body").textContent="",de("singlePlayer","expert",0)})})),be.addEventListener("click",(function e(){be.removeEventListener("click",e),fe.textContent="";const n=document.createElement("div");n.classList.add("player1NameContainer"),fe.appendChild(n);const t=document.createElement("div");t.classList.add("player2NameContainer"),fe.appendChild(t);const r=document.createElement("div");r.textContent="Player 1 Name",n.appendChild(r);const a=document.createElement("input");a.classList.add("inputPlayer1Name"),n.appendChild(a);const o=document.createElement("div");o.textContent="Player 2 Name",t.appendChild(o);const i=document.createElement("input");i.classList.add("inputPlayer2Name"),t.appendChild(i);const l=document.createElement("div");l.classList.add("playMultiplayerButton"),l.textContent="PLAY",me.appendChild(l),l.addEventListener("click",ve)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,