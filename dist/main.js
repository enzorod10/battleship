(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,"*{\n    padding: 0px;\n    margin: 0px;\n}\n\nbody{\n    height: 100vh;\n    box-sizing: border-box;\n    display: grid;\n    grid-template-rows: 2fr 20fr 1fr;\n}\n\n.header{\n    border: 1px black solid;\n}\n\n.main{\n    border: 1px red solid;\n    display: flex;\n}\n\n.footer{\n    border: 1px yellow solid;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* main area section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* Player 1 Area Section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n.player1Area{\n    border: 1px black solid;\n    width: 100%;\n    display: grid;\n}\n\n.player1Board{\n    width: 450px;\n    height: 450px;\n    border: 1px black solid;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n}\n\n.player1ShipSection{\n    width: 450px;\n    height: 200px;\n    border: 1px red solid;\n}\n\n.player1Board > div{\n    border: 1px black solid;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* Player 2 Area Section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n.player2Area{\n    border: 1px black solid;\n    width: 100%;\n    display: grid;\n}\n\n.player2Board{\n    border: 1px black solid;\n    width: 450px;\n    height: 450px;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n}\n\n.player2ShipSection{\n    width: 450px;\n    height: 200px;\n    border: 1px red solid;\n}\n\n.player2Board > div{\n    border: 1px black solid;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,gCAAgC;AACpC;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;IACrB,aAAa;AACjB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA,2CAA2C;AAC3C,sBAAsB;AACtB,2CAA2C;;AAE3C,2CAA2C;AAC3C,0BAA0B;AAC1B,2CAA2C;AAC3C;IACI,uBAAuB;IACvB,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,aAAa;IACb,sCAAsC;IACtC,mCAAmC;AACvC;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,qBAAqB;AACzB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA,2CAA2C;AAC3C,0BAA0B;AAC1B,2CAA2C;AAC3C;IACI,uBAAuB;IACvB,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,aAAa;IACb,aAAa;IACb,sCAAsC;IACtC,mCAAmC;AACvC;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,qBAAqB;AACzB;;AAEA;IACI,uBAAuB;AAC3B",sourcesContent:["*{\n    padding: 0px;\n    margin: 0px;\n}\n\nbody{\n    height: 100vh;\n    box-sizing: border-box;\n    display: grid;\n    grid-template-rows: 2fr 20fr 1fr;\n}\n\n.header{\n    border: 1px black solid;\n}\n\n.main{\n    border: 1px red solid;\n    display: flex;\n}\n\n.footer{\n    border: 1px yellow solid;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* main area section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* Player 1 Area Section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n.player1Area{\n    border: 1px black solid;\n    width: 100%;\n    display: grid;\n}\n\n.player1Board{\n    width: 450px;\n    height: 450px;\n    border: 1px black solid;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n}\n\n.player1ShipSection{\n    width: 450px;\n    height: 200px;\n    border: 1px red solid;\n}\n\n.player1Board > div{\n    border: 1px black solid;\n}\n\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n/* Player 2 Area Section */\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n.player2Area{\n    border: 1px black solid;\n    width: 100%;\n    display: grid;\n}\n\n.player2Board{\n    border: 1px black solid;\n    width: 450px;\n    height: 450px;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n}\n\n.player2ShipSection{\n    width: 450px;\n    height: 200px;\n    border: 1px red solid;\n}\n\n.player2Board > div{\n    border: 1px black solid;\n}"],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var l=0;l<e.length;l++){var A=[].concat(e[l]);r&&i[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),n.push(A))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var d=e[s],l=r.base?d[0]+r.base:d[0],A=o[l]||0,c="".concat(l," ").concat(A);o[l]=A+1;var p=t(c),h={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)n[p].references++,n[p].updater(h);else{var u=a(h,r);r.byIndex=s,n.splice(s,0,{identifier:c,updater:u,references:1})}i.push(c)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=t(o[i]);n[s].references--}for(var d=r(e,a),l=0;l<o.length;l++){var A=t(o[l]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}o=d}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(569),i=t.n(o),s=t(565),d=t.n(s),l=t(216),A=t.n(l),c=t(589),p=t.n(c),h=t(426),u={};u.styleTagTransform=p(),u.setAttributes=d(),u.insert=i().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=A(),n()(h.Z,u),h.Z&&h.Z.locals&&h.Z.locals;class C{constructor(e,n,t){this.name=e,this.length=n,this.remainingLength=n,this.axis=t,this.hit=function(){this.remainingLength--},this.isSunk=function(){return 0===this.remainingLength}}}let f=[];class b{constructor(){this.board=[],this.allShipsDestroyed}init(){for(let e=0;e<10;e++){this.board[e]=[];for(let n=0;n<10;n++)this.board[e][n]={hasShip:!1,isShot:!1}}}placeShip(e,n,t,r,a){if("horizontal"===a){for(let t=0;t<r;t++)if(n+t>=9||!0===this.board[e][n+t].hasShip)throw new Error("invalid horizontal position")}else for(let t=0;t<r;t++)if(e+t>=9||!0===this.board[e+t][n].hasShip)throw new Error("invalid vertical position");if(f.push(new C(t,r,a)),"horizontal"===a)for(let t=0;t<r;t++)this.board[e][n+t].hasShip=!0,this.board[e][n+t].ship=f[f.length-1];else for(let t=0;t<r;t++)this.board[e+t][n].hasShip=!0,this.board[e+t][n].ship=f[f.length-1]}receiveAttack(e,n){this.board[e][n].isShot=!0,this.board[e][n].hasShip&&(this.board[e][n].ship.hit(),this.board[e][n].ship.isSunk(),this.checkShips())}checkShips(){let e=0;for(let n=0;n<f.length;n++)!0===f[n].isSunk()&&e++,e===f.length&&(this.allShipsDestroyed=!0)}}document.querySelector("button").addEventListener("click",(function(){(function(){const e=document.querySelector(".main");e.textContent="";const n=document.createElement("div");e.appendChild(n),n.classList.add("player1Area");const t=document.createElement("div");t.classList.add("player1Board"),n.appendChild(t);const r=document.createElement("div");r.classList.add("player1ShipSection"),n.appendChild(r);const a=document.createElement("div");e.appendChild(a),a.classList.add("player2Area");const o=document.createElement("div");o.classList.add("player2Board"),a.appendChild(o);const i=document.createElement("div");i.classList.add("player2ShipSection"),a.appendChild(i)})(),(new b).init(),function(){let e=document.querySelector(".player1Board");e.textContent="";let n=[];for(let t=0;t<10;t++){n[t]=[];for(let r=0;r<10;r++)n[t][r]=document.createElement("div"),n[t][r].location={y:t,x:r},e.appendChild(n[t][r])}}(),(new b).init(),function(){let e=document.querySelector(".player2Board");e.textContent="";let n=[];for(let t=0;t<10;t++){n[t]=[];for(let r=0;r<10;r++)n[t][r]=document.createElement("div"),n[t][r].location={y:t,x:r},e.appendChild(n[t][r])}}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,